"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import api.taprootassets_pb2 as taprootassets_pb2
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _ProofType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ProofTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ProofType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    PROOF_TYPE_UNSPECIFIED: _ProofType.ValueType  # 0
    PROOF_TYPE_ISSUANCE: _ProofType.ValueType  # 1
    PROOF_TYPE_TRANSFER: _ProofType.ValueType  # 2

class ProofType(_ProofType, metaclass=_ProofTypeEnumTypeWrapper): ...

PROOF_TYPE_UNSPECIFIED: ProofType.ValueType  # 0
PROOF_TYPE_ISSUANCE: ProofType.ValueType  # 1
PROOF_TYPE_TRANSFER: ProofType.ValueType  # 2
global___ProofType = ProofType

class _UniverseSyncMode:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _UniverseSyncModeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_UniverseSyncMode.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    SYNC_ISSUANCE_ONLY: _UniverseSyncMode.ValueType  # 0
    """A sync node that indicates that only new asset creation (minting) proofs
    should be synced.
    """
    SYNC_FULL: _UniverseSyncMode.ValueType  # 1
    """A syncing mode that indicates that all asset proofs should be synced.
    This includes normal transfers as well.
    """

class UniverseSyncMode(_UniverseSyncMode, metaclass=_UniverseSyncModeEnumTypeWrapper): ...

SYNC_ISSUANCE_ONLY: UniverseSyncMode.ValueType  # 0
"""A sync node that indicates that only new asset creation (minting) proofs
should be synced.
"""
SYNC_FULL: UniverseSyncMode.ValueType  # 1
"""A syncing mode that indicates that all asset proofs should be synced.
This includes normal transfers as well.
"""
global___UniverseSyncMode = UniverseSyncMode

class _AssetQuerySort:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _AssetQuerySortEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AssetQuerySort.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    SORT_BY_NONE: _AssetQuerySort.ValueType  # 0
    SORT_BY_ASSET_NAME: _AssetQuerySort.ValueType  # 1
    SORT_BY_ASSET_ID: _AssetQuerySort.ValueType  # 2
    SORT_BY_ASSET_TYPE: _AssetQuerySort.ValueType  # 3
    SORT_BY_TOTAL_SYNCS: _AssetQuerySort.ValueType  # 4
    SORT_BY_TOTAL_PROOFS: _AssetQuerySort.ValueType  # 5
    SORT_BY_GENESIS_HEIGHT: _AssetQuerySort.ValueType  # 6
    SORT_BY_TOTAL_SUPPLY: _AssetQuerySort.ValueType  # 7

class AssetQuerySort(_AssetQuerySort, metaclass=_AssetQuerySortEnumTypeWrapper): ...

SORT_BY_NONE: AssetQuerySort.ValueType  # 0
SORT_BY_ASSET_NAME: AssetQuerySort.ValueType  # 1
SORT_BY_ASSET_ID: AssetQuerySort.ValueType  # 2
SORT_BY_ASSET_TYPE: AssetQuerySort.ValueType  # 3
SORT_BY_TOTAL_SYNCS: AssetQuerySort.ValueType  # 4
SORT_BY_TOTAL_PROOFS: AssetQuerySort.ValueType  # 5
SORT_BY_GENESIS_HEIGHT: AssetQuerySort.ValueType  # 6
SORT_BY_TOTAL_SUPPLY: AssetQuerySort.ValueType  # 7
global___AssetQuerySort = AssetQuerySort

class _SortDirection:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _SortDirectionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SortDirection.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    SORT_DIRECTION_ASC: _SortDirection.ValueType  # 0
    SORT_DIRECTION_DESC: _SortDirection.ValueType  # 1

class SortDirection(_SortDirection, metaclass=_SortDirectionEnumTypeWrapper): ...

SORT_DIRECTION_ASC: SortDirection.ValueType  # 0
SORT_DIRECTION_DESC: SortDirection.ValueType  # 1
global___SortDirection = SortDirection

class _AssetTypeFilter:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _AssetTypeFilterEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AssetTypeFilter.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    FILTER_ASSET_NONE: _AssetTypeFilter.ValueType  # 0
    FILTER_ASSET_NORMAL: _AssetTypeFilter.ValueType  # 1
    FILTER_ASSET_COLLECTIBLE: _AssetTypeFilter.ValueType  # 2

class AssetTypeFilter(_AssetTypeFilter, metaclass=_AssetTypeFilterEnumTypeWrapper): ...

FILTER_ASSET_NONE: AssetTypeFilter.ValueType  # 0
FILTER_ASSET_NORMAL: AssetTypeFilter.ValueType  # 1
FILTER_ASSET_COLLECTIBLE: AssetTypeFilter.ValueType  # 2
global___AssetTypeFilter = AssetTypeFilter

@typing_extensions.final
class AssetRootRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    WITH_AMOUNTS_BY_ID_FIELD_NUMBER: builtins.int
    OFFSET_FIELD_NUMBER: builtins.int
    LIMIT_FIELD_NUMBER: builtins.int
    DIRECTION_FIELD_NUMBER: builtins.int
    with_amounts_by_id: builtins.bool
    """If true, then the response will include the amounts for each asset ID
    of grouped assets.
    """
    offset: builtins.int
    """The offset for the page."""
    limit: builtins.int
    """The length limit for the page."""
    direction: global___SortDirection.ValueType
    """The direction of the page."""
    def __init__(
        self,
        *,
        with_amounts_by_id: builtins.bool = ...,
        offset: builtins.int = ...,
        limit: builtins.int = ...,
        direction: global___SortDirection.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["direction", b"direction", "limit", b"limit", "offset", b"offset", "with_amounts_by_id", b"with_amounts_by_id"]) -> None: ...

global___AssetRootRequest = AssetRootRequest

@typing_extensions.final
class MerkleSumNode(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ROOT_HASH_FIELD_NUMBER: builtins.int
    ROOT_SUM_FIELD_NUMBER: builtins.int
    root_hash: builtins.bytes
    """The MS-SMT root hash for the branch node."""
    root_sum: builtins.int
    """The root sum of the branch node. This is hashed to create the root_hash
    along with the left and right siblings. This value represents the total
    known supply of the asset.
    """
    def __init__(
        self,
        *,
        root_hash: builtins.bytes = ...,
        root_sum: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["root_hash", b"root_hash", "root_sum", b"root_sum"]) -> None: ...

global___MerkleSumNode = MerkleSumNode

@typing_extensions.final
class ID(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ASSET_ID_FIELD_NUMBER: builtins.int
    ASSET_ID_STR_FIELD_NUMBER: builtins.int
    GROUP_KEY_FIELD_NUMBER: builtins.int
    GROUP_KEY_STR_FIELD_NUMBER: builtins.int
    PROOF_TYPE_FIELD_NUMBER: builtins.int
    asset_id: builtins.bytes
    """The 32-byte asset ID specified as raw bytes (gRPC only)."""
    asset_id_str: builtins.str
    """The 32-byte asset ID encoded as a hex string (use this for REST)."""
    group_key: builtins.bytes
    """The 32-byte asset group key specified as raw bytes (gRPC only)."""
    group_key_str: builtins.str
    """The 32-byte asset group key encoded as hex string (use this for
    REST).
    """
    proof_type: global___ProofType.ValueType
    def __init__(
        self,
        *,
        asset_id: builtins.bytes = ...,
        asset_id_str: builtins.str = ...,
        group_key: builtins.bytes = ...,
        group_key_str: builtins.str = ...,
        proof_type: global___ProofType.ValueType = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["asset_id", b"asset_id", "asset_id_str", b"asset_id_str", "group_key", b"group_key", "group_key_str", b"group_key_str", "id", b"id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["asset_id", b"asset_id", "asset_id_str", b"asset_id_str", "group_key", b"group_key", "group_key_str", b"group_key_str", "id", b"id", "proof_type", b"proof_type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["id", b"id"]) -> typing_extensions.Literal["asset_id", "asset_id_str", "group_key", "group_key_str"] | None: ...

global___ID = ID

@typing_extensions.final
class UniverseRoot(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class AmountsByAssetIdEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.int
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.int = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    MSSMT_ROOT_FIELD_NUMBER: builtins.int
    ASSET_NAME_FIELD_NUMBER: builtins.int
    AMOUNTS_BY_ASSET_ID_FIELD_NUMBER: builtins.int
    @property
    def id(self) -> global___ID: ...
    @property
    def mssmt_root(self) -> global___MerkleSumNode:
        """The merkle sum sparse merkle tree root associated with the above
        universe ID.
        """
    asset_name: builtins.str
    """The name of the asset."""
    @property
    def amounts_by_asset_id(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.int]:
        """A map of hex encoded asset IDs to the number of units minted for that
        asset. This only contains more than one entry for grouped assets and in
        that case represents the whole list of assets currently known to exist
        within the group. For single (non-grouped) assets, this is equal to the
        asset ID above and the sum in the mssmt_root. A hex encoded string is
        used as the map key because gRPC does not support using raw bytes for a
        map key.
        """
    def __init__(
        self,
        *,
        id: global___ID | None = ...,
        mssmt_root: global___MerkleSumNode | None = ...,
        asset_name: builtins.str = ...,
        amounts_by_asset_id: collections.abc.Mapping[builtins.str, builtins.int] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["id", b"id", "mssmt_root", b"mssmt_root"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["amounts_by_asset_id", b"amounts_by_asset_id", "asset_name", b"asset_name", "id", b"id", "mssmt_root", b"mssmt_root"]) -> None: ...

global___UniverseRoot = UniverseRoot

@typing_extensions.final
class AssetRootResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class UniverseRootsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___UniverseRoot: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___UniverseRoot | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    UNIVERSE_ROOTS_FIELD_NUMBER: builtins.int
    @property
    def universe_roots(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___UniverseRoot]:
        """A map of the set of known universe roots for each asset. The key in the
        map is the 32-byte asset_id or group key hash.
        """
    def __init__(
        self,
        *,
        universe_roots: collections.abc.Mapping[builtins.str, global___UniverseRoot] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["universe_roots", b"universe_roots"]) -> None: ...

global___AssetRootResponse = AssetRootResponse

@typing_extensions.final
class AssetRootQuery(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    @property
    def id(self) -> global___ID:
        """An ID value to uniquely identify a Universe root."""
    def __init__(
        self,
        *,
        id: global___ID | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["id", b"id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["id", b"id"]) -> None: ...

global___AssetRootQuery = AssetRootQuery

@typing_extensions.final
class QueryRootResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ISSUANCE_ROOT_FIELD_NUMBER: builtins.int
    TRANSFER_ROOT_FIELD_NUMBER: builtins.int
    @property
    def issuance_root(self) -> global___UniverseRoot:
        """The issuance universe root for the given asset ID or group key."""
    @property
    def transfer_root(self) -> global___UniverseRoot:
        """The transfer universe root for the given asset ID or group key."""
    def __init__(
        self,
        *,
        issuance_root: global___UniverseRoot | None = ...,
        transfer_root: global___UniverseRoot | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["issuance_root", b"issuance_root", "transfer_root", b"transfer_root"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["issuance_root", b"issuance_root", "transfer_root", b"transfer_root"]) -> None: ...

global___QueryRootResponse = QueryRootResponse

@typing_extensions.final
class DeleteRootQuery(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    @property
    def id(self) -> global___ID:
        """An ID value to uniquely identify a Universe root."""
    def __init__(
        self,
        *,
        id: global___ID | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["id", b"id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["id", b"id"]) -> None: ...

global___DeleteRootQuery = DeleteRootQuery

@typing_extensions.final
class DeleteRootResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___DeleteRootResponse = DeleteRootResponse

@typing_extensions.final
class Outpoint(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HASH_STR_FIELD_NUMBER: builtins.int
    INDEX_FIELD_NUMBER: builtins.int
    hash_str: builtins.str
    """The output as a hex encoded (and reversed!) string."""
    index: builtins.int
    """The index of the output."""
    def __init__(
        self,
        *,
        hash_str: builtins.str = ...,
        index: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["hash_str", b"hash_str", "index", b"index"]) -> None: ...

global___Outpoint = Outpoint

@typing_extensions.final
class AssetKey(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    OP_STR_FIELD_NUMBER: builtins.int
    OP_FIELD_NUMBER: builtins.int
    SCRIPT_KEY_BYTES_FIELD_NUMBER: builtins.int
    SCRIPT_KEY_STR_FIELD_NUMBER: builtins.int
    op_str: builtins.str
    @property
    def op(self) -> global___Outpoint: ...
    script_key_bytes: builtins.bytes
    script_key_str: builtins.str
    def __init__(
        self,
        *,
        op_str: builtins.str = ...,
        op: global___Outpoint | None = ...,
        script_key_bytes: builtins.bytes = ...,
        script_key_str: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["op", b"op", "op_str", b"op_str", "outpoint", b"outpoint", "script_key", b"script_key", "script_key_bytes", b"script_key_bytes", "script_key_str", b"script_key_str"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["op", b"op", "op_str", b"op_str", "outpoint", b"outpoint", "script_key", b"script_key", "script_key_bytes", b"script_key_bytes", "script_key_str", b"script_key_str"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["outpoint", b"outpoint"]) -> typing_extensions.Literal["op_str", "op"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["script_key", b"script_key"]) -> typing_extensions.Literal["script_key_bytes", "script_key_str"] | None: ...

global___AssetKey = AssetKey

@typing_extensions.final
class AssetLeafKeysRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    OFFSET_FIELD_NUMBER: builtins.int
    LIMIT_FIELD_NUMBER: builtins.int
    DIRECTION_FIELD_NUMBER: builtins.int
    @property
    def id(self) -> global___ID:
        """The ID of the asset to query for."""
    offset: builtins.int
    """The offset for the page."""
    limit: builtins.int
    """The length limit for the page."""
    direction: global___SortDirection.ValueType
    """The direction of the page."""
    def __init__(
        self,
        *,
        id: global___ID | None = ...,
        offset: builtins.int = ...,
        limit: builtins.int = ...,
        direction: global___SortDirection.ValueType = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["id", b"id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["direction", b"direction", "id", b"id", "limit", b"limit", "offset", b"offset"]) -> None: ...

global___AssetLeafKeysRequest = AssetLeafKeysRequest

@typing_extensions.final
class AssetLeafKeyResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ASSET_KEYS_FIELD_NUMBER: builtins.int
    @property
    def asset_keys(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AssetKey]:
        """The set of asset leaf keys for the given asset ID or group key."""
    def __init__(
        self,
        *,
        asset_keys: collections.abc.Iterable[global___AssetKey] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["asset_keys", b"asset_keys"]) -> None: ...

global___AssetLeafKeyResponse = AssetLeafKeyResponse

@typing_extensions.final
class AssetLeaf(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ASSET_FIELD_NUMBER: builtins.int
    PROOF_FIELD_NUMBER: builtins.int
    @property
    def asset(self) -> taprootassets_pb2.Asset:
        """The asset included in the leaf."""
    proof: builtins.bytes
    """TODO(roasbeef): only needed for display? can get from proof below ^

    The asset issuance or transfer proof, which proves that the asset
    specified above was issued or transferred properly. This is always just
    an individual mint/transfer proof and never a proof file.
    """
    def __init__(
        self,
        *,
        asset: taprootassets_pb2.Asset | None = ...,
        proof: builtins.bytes = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["asset", b"asset"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["asset", b"asset", "proof", b"proof"]) -> None: ...

global___AssetLeaf = AssetLeaf

@typing_extensions.final
class AssetLeafResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LEAVES_FIELD_NUMBER: builtins.int
    @property
    def leaves(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AssetLeaf]:
        """The set of asset leaves for the given asset ID or group key."""
    def __init__(
        self,
        *,
        leaves: collections.abc.Iterable[global___AssetLeaf] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["leaves", b"leaves"]) -> None: ...

global___AssetLeafResponse = AssetLeafResponse

@typing_extensions.final
class UniverseKey(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    LEAF_KEY_FIELD_NUMBER: builtins.int
    @property
    def id(self) -> global___ID:
        """The ID of the asset to query for."""
    @property
    def leaf_key(self) -> global___AssetKey:
        """The asset key to query for."""
    def __init__(
        self,
        *,
        id: global___ID | None = ...,
        leaf_key: global___AssetKey | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["id", b"id", "leaf_key", b"leaf_key"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["id", b"id", "leaf_key", b"leaf_key"]) -> None: ...

global___UniverseKey = UniverseKey

@typing_extensions.final
class AssetProofResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REQ_FIELD_NUMBER: builtins.int
    UNIVERSE_ROOT_FIELD_NUMBER: builtins.int
    UNIVERSE_INCLUSION_PROOF_FIELD_NUMBER: builtins.int
    ASSET_LEAF_FIELD_NUMBER: builtins.int
    MULTIVERSE_ROOT_FIELD_NUMBER: builtins.int
    MULTIVERSE_INCLUSION_PROOF_FIELD_NUMBER: builtins.int
    @property
    def req(self) -> global___UniverseKey:
        """The request original request for the issuance proof."""
    @property
    def universe_root(self) -> global___UniverseRoot:
        """The Universe root that includes this asset leaf."""
    universe_inclusion_proof: builtins.bytes
    """An inclusion proof for the asset leaf included below. The value is that
    issuance proof itself, with a sum value of the amount of the asset.
    """
    @property
    def asset_leaf(self) -> global___AssetLeaf:
        """The asset leaf itself, which includes the asset and the issuance proof."""
    @property
    def multiverse_root(self) -> global___MerkleSumNode:
        """MultiverseRoot is the root of the multiverse tree that includes this
        asset leaf.
        """
    multiverse_inclusion_proof: builtins.bytes
    """MultiverseInclusionProof is the inclusion proof for the asset leaf in the
    multiverse.
    """
    def __init__(
        self,
        *,
        req: global___UniverseKey | None = ...,
        universe_root: global___UniverseRoot | None = ...,
        universe_inclusion_proof: builtins.bytes = ...,
        asset_leaf: global___AssetLeaf | None = ...,
        multiverse_root: global___MerkleSumNode | None = ...,
        multiverse_inclusion_proof: builtins.bytes = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["asset_leaf", b"asset_leaf", "multiverse_root", b"multiverse_root", "req", b"req", "universe_root", b"universe_root"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["asset_leaf", b"asset_leaf", "multiverse_inclusion_proof", b"multiverse_inclusion_proof", "multiverse_root", b"multiverse_root", "req", b"req", "universe_inclusion_proof", b"universe_inclusion_proof", "universe_root", b"universe_root"]) -> None: ...

global___AssetProofResponse = AssetProofResponse

@typing_extensions.final
class AssetProof(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEY_FIELD_NUMBER: builtins.int
    ASSET_LEAF_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> global___UniverseKey:
        """The ID of the asset to insert the proof for."""
    @property
    def asset_leaf(self) -> global___AssetLeaf:
        """The asset leaf to insert into the Universe tree."""
    def __init__(
        self,
        *,
        key: global___UniverseKey | None = ...,
        asset_leaf: global___AssetLeaf | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["asset_leaf", b"asset_leaf", "key", b"key"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["asset_leaf", b"asset_leaf", "key", b"key"]) -> None: ...

global___AssetProof = AssetProof

@typing_extensions.final
class InfoRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___InfoRequest = InfoRequest

@typing_extensions.final
class InfoResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RUNTIME_ID_FIELD_NUMBER: builtins.int
    runtime_id: builtins.int
    """A pseudo-random runtime ID for the current instance of the Universe
    server, changes with each restart. Mainly used to identify identical
    servers when they are exposed under different hostnames/ports.
    """
    def __init__(
        self,
        *,
        runtime_id: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["runtime_id", b"runtime_id"]) -> None: ...

global___InfoResponse = InfoResponse

@typing_extensions.final
class SyncTarget(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    @property
    def id(self) -> global___ID: ...
    def __init__(
        self,
        *,
        id: global___ID | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["id", b"id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["id", b"id"]) -> None: ...

global___SyncTarget = SyncTarget

@typing_extensions.final
class SyncRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    UNIVERSE_HOST_FIELD_NUMBER: builtins.int
    SYNC_MODE_FIELD_NUMBER: builtins.int
    SYNC_TARGETS_FIELD_NUMBER: builtins.int
    universe_host: builtins.str
    """TODO(roasbeef): accept connection type? so can pass along self-signed
    cert, also brontide based RPC handshake
    """
    sync_mode: global___UniverseSyncMode.ValueType
    """The sync mode. This determines what type of proofs are synced."""
    @property
    def sync_targets(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SyncTarget]:
        """The set of assets to sync. If none are specified, then all assets are
        synced.
        """
    def __init__(
        self,
        *,
        universe_host: builtins.str = ...,
        sync_mode: global___UniverseSyncMode.ValueType = ...,
        sync_targets: collections.abc.Iterable[global___SyncTarget] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["sync_mode", b"sync_mode", "sync_targets", b"sync_targets", "universe_host", b"universe_host"]) -> None: ...

global___SyncRequest = SyncRequest

@typing_extensions.final
class SyncedUniverse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    OLD_ASSET_ROOT_FIELD_NUMBER: builtins.int
    NEW_ASSET_ROOT_FIELD_NUMBER: builtins.int
    NEW_ASSET_LEAVES_FIELD_NUMBER: builtins.int
    @property
    def old_asset_root(self) -> global___UniverseRoot:
        """The old Universe root for the synced asset."""
    @property
    def new_asset_root(self) -> global___UniverseRoot:
        """The new Universe root for the synced asset."""
    @property
    def new_asset_leaves(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AssetLeaf]:
        """The set of new asset leaves that were synced."""
    def __init__(
        self,
        *,
        old_asset_root: global___UniverseRoot | None = ...,
        new_asset_root: global___UniverseRoot | None = ...,
        new_asset_leaves: collections.abc.Iterable[global___AssetLeaf] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["new_asset_root", b"new_asset_root", "old_asset_root", b"old_asset_root"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["new_asset_leaves", b"new_asset_leaves", "new_asset_root", b"new_asset_root", "old_asset_root", b"old_asset_root"]) -> None: ...

global___SyncedUniverse = SyncedUniverse

@typing_extensions.final
class StatsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___StatsRequest = StatsRequest

@typing_extensions.final
class SyncResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SYNCED_UNIVERSES_FIELD_NUMBER: builtins.int
    @property
    def synced_universes(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SyncedUniverse]:
        """The set of synced asset Universes."""
    def __init__(
        self,
        *,
        synced_universes: collections.abc.Iterable[global___SyncedUniverse] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["synced_universes", b"synced_universes"]) -> None: ...

global___SyncResponse = SyncResponse

@typing_extensions.final
class UniverseFederationServer(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HOST_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    host: builtins.str
    id: builtins.int
    def __init__(
        self,
        *,
        host: builtins.str = ...,
        id: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["host", b"host", "id", b"id"]) -> None: ...

global___UniverseFederationServer = UniverseFederationServer

@typing_extensions.final
class ListFederationServersRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___ListFederationServersRequest = ListFederationServersRequest

@typing_extensions.final
class ListFederationServersResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SERVERS_FIELD_NUMBER: builtins.int
    @property
    def servers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___UniverseFederationServer]: ...
    def __init__(
        self,
        *,
        servers: collections.abc.Iterable[global___UniverseFederationServer] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["servers", b"servers"]) -> None: ...

global___ListFederationServersResponse = ListFederationServersResponse

@typing_extensions.final
class AddFederationServerRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SERVERS_FIELD_NUMBER: builtins.int
    @property
    def servers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___UniverseFederationServer]: ...
    def __init__(
        self,
        *,
        servers: collections.abc.Iterable[global___UniverseFederationServer] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["servers", b"servers"]) -> None: ...

global___AddFederationServerRequest = AddFederationServerRequest

@typing_extensions.final
class AddFederationServerResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___AddFederationServerResponse = AddFederationServerResponse

@typing_extensions.final
class DeleteFederationServerRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SERVERS_FIELD_NUMBER: builtins.int
    @property
    def servers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___UniverseFederationServer]: ...
    def __init__(
        self,
        *,
        servers: collections.abc.Iterable[global___UniverseFederationServer] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["servers", b"servers"]) -> None: ...

global___DeleteFederationServerRequest = DeleteFederationServerRequest

@typing_extensions.final
class DeleteFederationServerResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___DeleteFederationServerResponse = DeleteFederationServerResponse

@typing_extensions.final
class StatsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NUM_TOTAL_ASSETS_FIELD_NUMBER: builtins.int
    NUM_TOTAL_GROUPS_FIELD_NUMBER: builtins.int
    NUM_TOTAL_SYNCS_FIELD_NUMBER: builtins.int
    NUM_TOTAL_PROOFS_FIELD_NUMBER: builtins.int
    num_total_assets: builtins.int
    num_total_groups: builtins.int
    num_total_syncs: builtins.int
    num_total_proofs: builtins.int
    def __init__(
        self,
        *,
        num_total_assets: builtins.int = ...,
        num_total_groups: builtins.int = ...,
        num_total_syncs: builtins.int = ...,
        num_total_proofs: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["num_total_assets", b"num_total_assets", "num_total_groups", b"num_total_groups", "num_total_proofs", b"num_total_proofs", "num_total_syncs", b"num_total_syncs"]) -> None: ...

global___StatsResponse = StatsResponse

@typing_extensions.final
class AssetStatsQuery(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ASSET_NAME_FILTER_FIELD_NUMBER: builtins.int
    ASSET_ID_FILTER_FIELD_NUMBER: builtins.int
    ASSET_TYPE_FILTER_FIELD_NUMBER: builtins.int
    SORT_BY_FIELD_NUMBER: builtins.int
    OFFSET_FIELD_NUMBER: builtins.int
    LIMIT_FIELD_NUMBER: builtins.int
    DIRECTION_FIELD_NUMBER: builtins.int
    asset_name_filter: builtins.str
    asset_id_filter: builtins.bytes
    asset_type_filter: global___AssetTypeFilter.ValueType
    sort_by: global___AssetQuerySort.ValueType
    offset: builtins.int
    limit: builtins.int
    direction: global___SortDirection.ValueType
    def __init__(
        self,
        *,
        asset_name_filter: builtins.str = ...,
        asset_id_filter: builtins.bytes = ...,
        asset_type_filter: global___AssetTypeFilter.ValueType = ...,
        sort_by: global___AssetQuerySort.ValueType = ...,
        offset: builtins.int = ...,
        limit: builtins.int = ...,
        direction: global___SortDirection.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["asset_id_filter", b"asset_id_filter", "asset_name_filter", b"asset_name_filter", "asset_type_filter", b"asset_type_filter", "direction", b"direction", "limit", b"limit", "offset", b"offset", "sort_by", b"sort_by"]) -> None: ...

global___AssetStatsQuery = AssetStatsQuery

@typing_extensions.final
class AssetStatsSnapshot(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    GROUP_KEY_FIELD_NUMBER: builtins.int
    GROUP_SUPPLY_FIELD_NUMBER: builtins.int
    GROUP_ANCHOR_FIELD_NUMBER: builtins.int
    ASSET_FIELD_NUMBER: builtins.int
    TOTAL_SYNCS_FIELD_NUMBER: builtins.int
    TOTAL_PROOFS_FIELD_NUMBER: builtins.int
    group_key: builtins.bytes
    """The group key of the asset group. If this is empty, then the asset is
    not part of a group.
    """
    group_supply: builtins.int
    """The total supply of the asset group. If the asset is not part of an asset
    group then this is always zero.
    """
    @property
    def group_anchor(self) -> global___AssetStatsAsset:
        """The group anchor that was used to group assets together into an asset
        group. This is only set if the asset is part of an asset group.
        """
    @property
    def asset(self) -> global___AssetStatsAsset:
        """If the asset is not part of an asset group, then this is the asset the
        stats below refer to.
        """
    total_syncs: builtins.int
    """The total number of syncs either for the asset group or the single asset
    if it is not part of a group.
    """
    total_proofs: builtins.int
    """The total number of proofs either for the asset group or the single asset
    if it is not part of a group.
    """
    def __init__(
        self,
        *,
        group_key: builtins.bytes = ...,
        group_supply: builtins.int = ...,
        group_anchor: global___AssetStatsAsset | None = ...,
        asset: global___AssetStatsAsset | None = ...,
        total_syncs: builtins.int = ...,
        total_proofs: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["asset", b"asset", "group_anchor", b"group_anchor"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["asset", b"asset", "group_anchor", b"group_anchor", "group_key", b"group_key", "group_supply", b"group_supply", "total_proofs", b"total_proofs", "total_syncs", b"total_syncs"]) -> None: ...

global___AssetStatsSnapshot = AssetStatsSnapshot

@typing_extensions.final
class AssetStatsAsset(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ASSET_ID_FIELD_NUMBER: builtins.int
    GENESIS_POINT_FIELD_NUMBER: builtins.int
    TOTAL_SUPPLY_FIELD_NUMBER: builtins.int
    ASSET_NAME_FIELD_NUMBER: builtins.int
    ASSET_TYPE_FIELD_NUMBER: builtins.int
    GENESIS_HEIGHT_FIELD_NUMBER: builtins.int
    GENESIS_TIMESTAMP_FIELD_NUMBER: builtins.int
    ANCHOR_POINT_FIELD_NUMBER: builtins.int
    asset_id: builtins.bytes
    genesis_point: builtins.str
    total_supply: builtins.int
    asset_name: builtins.str
    asset_type: taprootassets_pb2.AssetType.ValueType
    genesis_height: builtins.int
    genesis_timestamp: builtins.int
    anchor_point: builtins.str
    def __init__(
        self,
        *,
        asset_id: builtins.bytes = ...,
        genesis_point: builtins.str = ...,
        total_supply: builtins.int = ...,
        asset_name: builtins.str = ...,
        asset_type: taprootassets_pb2.AssetType.ValueType = ...,
        genesis_height: builtins.int = ...,
        genesis_timestamp: builtins.int = ...,
        anchor_point: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["anchor_point", b"anchor_point", "asset_id", b"asset_id", "asset_name", b"asset_name", "asset_type", b"asset_type", "genesis_height", b"genesis_height", "genesis_point", b"genesis_point", "genesis_timestamp", b"genesis_timestamp", "total_supply", b"total_supply"]) -> None: ...

global___AssetStatsAsset = AssetStatsAsset

@typing_extensions.final
class UniverseAssetStats(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ASSET_STATS_FIELD_NUMBER: builtins.int
    @property
    def asset_stats(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AssetStatsSnapshot]: ...
    def __init__(
        self,
        *,
        asset_stats: collections.abc.Iterable[global___AssetStatsSnapshot] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["asset_stats", b"asset_stats"]) -> None: ...

global___UniverseAssetStats = UniverseAssetStats

@typing_extensions.final
class QueryEventsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    START_TIMESTAMP_FIELD_NUMBER: builtins.int
    END_TIMESTAMP_FIELD_NUMBER: builtins.int
    start_timestamp: builtins.int
    end_timestamp: builtins.int
    def __init__(
        self,
        *,
        start_timestamp: builtins.int = ...,
        end_timestamp: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["end_timestamp", b"end_timestamp", "start_timestamp", b"start_timestamp"]) -> None: ...

global___QueryEventsRequest = QueryEventsRequest

@typing_extensions.final
class QueryEventsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    EVENTS_FIELD_NUMBER: builtins.int
    @property
    def events(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___GroupedUniverseEvents]: ...
    def __init__(
        self,
        *,
        events: collections.abc.Iterable[global___GroupedUniverseEvents] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["events", b"events"]) -> None: ...

global___QueryEventsResponse = QueryEventsResponse

@typing_extensions.final
class GroupedUniverseEvents(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DATE_FIELD_NUMBER: builtins.int
    SYNC_EVENTS_FIELD_NUMBER: builtins.int
    NEW_PROOF_EVENTS_FIELD_NUMBER: builtins.int
    date: builtins.str
    """The date the events occurred on, formatted as YYYY-MM-DD."""
    sync_events: builtins.int
    new_proof_events: builtins.int
    def __init__(
        self,
        *,
        date: builtins.str = ...,
        sync_events: builtins.int = ...,
        new_proof_events: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["date", b"date", "new_proof_events", b"new_proof_events", "sync_events", b"sync_events"]) -> None: ...

global___GroupedUniverseEvents = GroupedUniverseEvents

@typing_extensions.final
class SetFederationSyncConfigRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    GLOBAL_SYNC_CONFIGS_FIELD_NUMBER: builtins.int
    ASSET_SYNC_CONFIGS_FIELD_NUMBER: builtins.int
    @property
    def global_sync_configs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___GlobalFederationSyncConfig]: ...
    @property
    def asset_sync_configs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AssetFederationSyncConfig]: ...
    def __init__(
        self,
        *,
        global_sync_configs: collections.abc.Iterable[global___GlobalFederationSyncConfig] | None = ...,
        asset_sync_configs: collections.abc.Iterable[global___AssetFederationSyncConfig] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["asset_sync_configs", b"asset_sync_configs", "global_sync_configs", b"global_sync_configs"]) -> None: ...

global___SetFederationSyncConfigRequest = SetFederationSyncConfigRequest

@typing_extensions.final
class SetFederationSyncConfigResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___SetFederationSyncConfigResponse = SetFederationSyncConfigResponse

@typing_extensions.final
class GlobalFederationSyncConfig(google.protobuf.message.Message):
    """GlobalFederationSyncConfig is a global proof type specific configuration
    for universe federation syncing.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PROOF_TYPE_FIELD_NUMBER: builtins.int
    ALLOW_SYNC_INSERT_FIELD_NUMBER: builtins.int
    ALLOW_SYNC_EXPORT_FIELD_NUMBER: builtins.int
    proof_type: global___ProofType.ValueType
    """proof_type is the universe proof type which this config applies to."""
    allow_sync_insert: builtins.bool
    """allow_sync_insert is a boolean that indicates whether leaves from
    universes of the given proof type have may be inserted via federation
    sync.
    """
    allow_sync_export: builtins.bool
    """allow_sync_export is a boolean that indicates whether leaves from
    universes of the given proof type have may be exported via federation
    sync.
    """
    def __init__(
        self,
        *,
        proof_type: global___ProofType.ValueType = ...,
        allow_sync_insert: builtins.bool = ...,
        allow_sync_export: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["allow_sync_export", b"allow_sync_export", "allow_sync_insert", b"allow_sync_insert", "proof_type", b"proof_type"]) -> None: ...

global___GlobalFederationSyncConfig = GlobalFederationSyncConfig

@typing_extensions.final
class AssetFederationSyncConfig(google.protobuf.message.Message):
    """AssetFederationSyncConfig is an asset universe specific configuration for
    federation syncing.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    ALLOW_SYNC_INSERT_FIELD_NUMBER: builtins.int
    ALLOW_SYNC_EXPORT_FIELD_NUMBER: builtins.int
    @property
    def id(self) -> global___ID:
        """id is the ID of the universe to configure."""
    allow_sync_insert: builtins.bool
    """allow_sync_insert is a boolean that indicates whether leaves from
    universes of the given proof type have may be inserted via federation
    sync.
    """
    allow_sync_export: builtins.bool
    """allow_sync_export is a boolean that indicates whether leaves from
    universes of the given proof type have may be exported via federation
    sync.
    """
    def __init__(
        self,
        *,
        id: global___ID | None = ...,
        allow_sync_insert: builtins.bool = ...,
        allow_sync_export: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["id", b"id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["allow_sync_export", b"allow_sync_export", "allow_sync_insert", b"allow_sync_insert", "id", b"id"]) -> None: ...

global___AssetFederationSyncConfig = AssetFederationSyncConfig

@typing_extensions.final
class QueryFederationSyncConfigRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    @property
    def id(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ID]:
        """Target universe ID(s)."""
    def __init__(
        self,
        *,
        id: collections.abc.Iterable[global___ID] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id", b"id"]) -> None: ...

global___QueryFederationSyncConfigRequest = QueryFederationSyncConfigRequest

@typing_extensions.final
class QueryFederationSyncConfigResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    GLOBAL_SYNC_CONFIGS_FIELD_NUMBER: builtins.int
    ASSET_SYNC_CONFIGS_FIELD_NUMBER: builtins.int
    @property
    def global_sync_configs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___GlobalFederationSyncConfig]: ...
    @property
    def asset_sync_configs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AssetFederationSyncConfig]: ...
    def __init__(
        self,
        *,
        global_sync_configs: collections.abc.Iterable[global___GlobalFederationSyncConfig] | None = ...,
        asset_sync_configs: collections.abc.Iterable[global___AssetFederationSyncConfig] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["asset_sync_configs", b"asset_sync_configs", "global_sync_configs", b"global_sync_configs"]) -> None: ...

global___QueryFederationSyncConfigResponse = QueryFederationSyncConfigResponse
