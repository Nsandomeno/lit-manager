"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _AssetType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _AssetTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AssetType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    NORMAL: _AssetType.ValueType  # 0
    """
    Indicates that an asset is capable of being split/merged, with each of the
    units being fungible, even across a key asset ID boundary (assuming the
    key group is the same).
    """
    COLLECTIBLE: _AssetType.ValueType  # 1
    """
    Indicates that an asset is a collectible, meaning that each of the other
    items under the same key group are not fully fungible with each other.
    Collectibles also cannot be split or merged.
    """

class AssetType(_AssetType, metaclass=_AssetTypeEnumTypeWrapper): ...

NORMAL: AssetType.ValueType  # 0
"""
Indicates that an asset is capable of being split/merged, with each of the
units being fungible, even across a key asset ID boundary (assuming the
key group is the same).
"""
COLLECTIBLE: AssetType.ValueType  # 1
"""
Indicates that an asset is a collectible, meaning that each of the other
items under the same key group are not fully fungible with each other.
Collectibles also cannot be split or merged.
"""
global___AssetType = AssetType

class _AssetMetaType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _AssetMetaTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AssetMetaType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    META_TYPE_OPAQUE: _AssetMetaType.ValueType  # 0
    """
    Opaque is used for asset meta blobs that have no true structure and instead
    should be interpreted as opaque blobs.
    """

class AssetMetaType(_AssetMetaType, metaclass=_AssetMetaTypeEnumTypeWrapper): ...

META_TYPE_OPAQUE: AssetMetaType.ValueType  # 0
"""
Opaque is used for asset meta blobs that have no true structure and instead
should be interpreted as opaque blobs.
"""
global___AssetMetaType = AssetMetaType

class _AssetVersion:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _AssetVersionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AssetVersion.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    ASSET_VERSION_V0: _AssetVersion.ValueType  # 0
    """ASSET_VERSION_V0 is the default asset version. This version will include
    the witness vector in the leaf for a tap commitment.
    """
    ASSET_VERSION_V1: _AssetVersion.ValueType  # 1
    """ASSET_VERSION_V1 is the asset version that leaves out the witness vector
    from the MS-SMT leaf encoding.
    """

class AssetVersion(_AssetVersion, metaclass=_AssetVersionEnumTypeWrapper): ...

ASSET_VERSION_V0: AssetVersion.ValueType  # 0
"""ASSET_VERSION_V0 is the default asset version. This version will include
the witness vector in the leaf for a tap commitment.
"""
ASSET_VERSION_V1: AssetVersion.ValueType  # 1
"""ASSET_VERSION_V1 is the asset version that leaves out the witness vector
from the MS-SMT leaf encoding.
"""
global___AssetVersion = AssetVersion

class _OutputType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _OutputTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_OutputType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    OUTPUT_TYPE_SIMPLE: _OutputType.ValueType  # 0
    """OUTPUT_TYPE_SIMPLE is a plain full-value or split output that is not a
    split root and does not carry passive assets. In case of a split, the
    asset of this output has a split commitment.
    """
    OUTPUT_TYPE_SPLIT_ROOT: _OutputType.ValueType  # 1
    """OUTPUT_TYPE_SPLIT_ROOT is a split root output that carries the change
    from a split or a tombstone from a non-interactive full value send
    output. In either case, the asset of this output has a tx witness.
    """
    OUTPUT_TYPE_PASSIVE_ASSETS_ONLY: _OutputType.ValueType  # 2
    """OUTPUT_TYPE_PASSIVE_ASSETS_ONLY indicates that this output only carries
    passive assets and therefore the asset in this output is nil. The passive
    assets themselves are signed in their own virtual transactions and
    are not present in this packet.
    """
    OUTPUT_TYPE_PASSIVE_SPLIT_ROOT: _OutputType.ValueType  # 3
    """OUTPUT_TYPE_PASSIVE_SPLIT_ROOT is a split root output that carries the
    change from a split or a tombstone from a non-interactive full value send
    output, as well as passive assets.
    """
    OUTPUT_TYPE_SIMPLE_PASSIVE_ASSETS: _OutputType.ValueType  # 4
    """OUTPUT_TYPE_SIMPLE_PASSIVE_ASSETS is a plain full-value interactive send
    output that also carries passive assets. This is a special case where we
    send the full value of a single asset in a commitment to a new script
    key, but also carry passive assets in the same output. This is useful for
    key rotation (send-to-self) scenarios or asset burns where we burn the
    full supply of a single asset within a commitment.
    """

class OutputType(_OutputType, metaclass=_OutputTypeEnumTypeWrapper): ...

OUTPUT_TYPE_SIMPLE: OutputType.ValueType  # 0
"""OUTPUT_TYPE_SIMPLE is a plain full-value or split output that is not a
split root and does not carry passive assets. In case of a split, the
asset of this output has a split commitment.
"""
OUTPUT_TYPE_SPLIT_ROOT: OutputType.ValueType  # 1
"""OUTPUT_TYPE_SPLIT_ROOT is a split root output that carries the change
from a split or a tombstone from a non-interactive full value send
output. In either case, the asset of this output has a tx witness.
"""
OUTPUT_TYPE_PASSIVE_ASSETS_ONLY: OutputType.ValueType  # 2
"""OUTPUT_TYPE_PASSIVE_ASSETS_ONLY indicates that this output only carries
passive assets and therefore the asset in this output is nil. The passive
assets themselves are signed in their own virtual transactions and
are not present in this packet.
"""
OUTPUT_TYPE_PASSIVE_SPLIT_ROOT: OutputType.ValueType  # 3
"""OUTPUT_TYPE_PASSIVE_SPLIT_ROOT is a split root output that carries the
change from a split or a tombstone from a non-interactive full value send
output, as well as passive assets.
"""
OUTPUT_TYPE_SIMPLE_PASSIVE_ASSETS: OutputType.ValueType  # 4
"""OUTPUT_TYPE_SIMPLE_PASSIVE_ASSETS is a plain full-value interactive send
output that also carries passive assets. This is a special case where we
send the full value of a single asset in a commitment to a new script
key, but also carry passive assets in the same output. This is useful for
key rotation (send-to-self) scenarios or asset burns where we burn the
full supply of a single asset within a commitment.
"""
global___OutputType = OutputType

class _AddrEventStatus:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _AddrEventStatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AddrEventStatus.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    ADDR_EVENT_STATUS_UNKNOWN: _AddrEventStatus.ValueType  # 0
    ADDR_EVENT_STATUS_TRANSACTION_DETECTED: _AddrEventStatus.ValueType  # 1
    ADDR_EVENT_STATUS_TRANSACTION_CONFIRMED: _AddrEventStatus.ValueType  # 2
    ADDR_EVENT_STATUS_PROOF_RECEIVED: _AddrEventStatus.ValueType  # 3
    ADDR_EVENT_STATUS_COMPLETED: _AddrEventStatus.ValueType  # 4

class AddrEventStatus(_AddrEventStatus, metaclass=_AddrEventStatusEnumTypeWrapper): ...

ADDR_EVENT_STATUS_UNKNOWN: AddrEventStatus.ValueType  # 0
ADDR_EVENT_STATUS_TRANSACTION_DETECTED: AddrEventStatus.ValueType  # 1
ADDR_EVENT_STATUS_TRANSACTION_CONFIRMED: AddrEventStatus.ValueType  # 2
ADDR_EVENT_STATUS_PROOF_RECEIVED: AddrEventStatus.ValueType  # 3
ADDR_EVENT_STATUS_COMPLETED: AddrEventStatus.ValueType  # 4
global___AddrEventStatus = AddrEventStatus

class _ProofTransferType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ProofTransferTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ProofTransferType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    PROOF_TRANSFER_TYPE_SEND: _ProofTransferType.ValueType  # 0
    """This value indicates that the proof transfer attempt is a delivery to the
    transfer counterparty.
    """
    PROOF_TRANSFER_TYPE_RECEIVE: _ProofTransferType.ValueType  # 1
    """This value indicates that the proof transfer attempt is a receive from
    the transfer counterparty.
    """

class ProofTransferType(_ProofTransferType, metaclass=_ProofTransferTypeEnumTypeWrapper):
    """ProofTransferType is the type of proof transfer attempt. The transfer is
    either a proof delivery to the transfer counterparty or receiving a proof
    from the transfer counterparty. Note that the transfer counterparty is
    usually the proof courier service.
    """

PROOF_TRANSFER_TYPE_SEND: ProofTransferType.ValueType  # 0
"""This value indicates that the proof transfer attempt is a delivery to the
transfer counterparty.
"""
PROOF_TRANSFER_TYPE_RECEIVE: ProofTransferType.ValueType  # 1
"""This value indicates that the proof transfer attempt is a receive from
the transfer counterparty.
"""
global___ProofTransferType = ProofTransferType

@typing_extensions.final
class AssetMeta(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DATA_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    META_HASH_FIELD_NUMBER: builtins.int
    data: builtins.bytes
    """
    The raw data of the asset meta data. Based on the type below, this may be
    structured data such as a text file or PDF. The size of the data is limited
    to 1MiB.
    """
    type: global___AssetMetaType.ValueType
    """The type of the asset meta data."""
    meta_hash: builtins.bytes
    """
    The hash of the meta. This is the hash of the TLV serialization of the meta
    itself.
    """
    def __init__(
        self,
        *,
        data: builtins.bytes = ...,
        type: global___AssetMetaType.ValueType = ...,
        meta_hash: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "meta_hash", b"meta_hash", "type", b"type"]) -> None: ...

global___AssetMeta = AssetMeta

@typing_extensions.final
class ListAssetRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    WITH_WITNESS_FIELD_NUMBER: builtins.int
    INCLUDE_SPENT_FIELD_NUMBER: builtins.int
    INCLUDE_LEASED_FIELD_NUMBER: builtins.int
    with_witness: builtins.bool
    include_spent: builtins.bool
    include_leased: builtins.bool
    def __init__(
        self,
        *,
        with_witness: builtins.bool = ...,
        include_spent: builtins.bool = ...,
        include_leased: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["include_leased", b"include_leased", "include_spent", b"include_spent", "with_witness", b"with_witness"]) -> None: ...

global___ListAssetRequest = ListAssetRequest

@typing_extensions.final
class AnchorInfo(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ANCHOR_TX_FIELD_NUMBER: builtins.int
    ANCHOR_BLOCK_HASH_FIELD_NUMBER: builtins.int
    ANCHOR_OUTPOINT_FIELD_NUMBER: builtins.int
    INTERNAL_KEY_FIELD_NUMBER: builtins.int
    MERKLE_ROOT_FIELD_NUMBER: builtins.int
    TAPSCRIPT_SIBLING_FIELD_NUMBER: builtins.int
    BLOCK_HEIGHT_FIELD_NUMBER: builtins.int
    anchor_tx: builtins.bytes
    """The transaction that anchors the Taproot Asset commitment where the asset
     resides.
    """
    anchor_block_hash: builtins.str
    """The block hash the contains the anchor transaction above."""
    anchor_outpoint: builtins.str
    """The outpoint (txid:vout) that stores the Taproot Asset commitment."""
    internal_key: builtins.bytes
    """
    The raw internal key that was used to create the anchor Taproot output key.
    """
    merkle_root: builtins.bytes
    """
    The Taproot merkle root hash of the anchor output the asset was committed
    to. If there is no Tapscript sibling, this is equal to the Taproot Asset
    root commitment hash.
    """
    tapscript_sibling: builtins.bytes
    """
    The serialized preimage of a Tapscript sibling, if there was one. If this
    is empty, then the merkle_root hash is equal to the Taproot root hash of the
    anchor output.
    """
    block_height: builtins.int
    """The height of the block which contains the anchor transaction."""
    def __init__(
        self,
        *,
        anchor_tx: builtins.bytes = ...,
        anchor_block_hash: builtins.str = ...,
        anchor_outpoint: builtins.str = ...,
        internal_key: builtins.bytes = ...,
        merkle_root: builtins.bytes = ...,
        tapscript_sibling: builtins.bytes = ...,
        block_height: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["anchor_block_hash", b"anchor_block_hash", "anchor_outpoint", b"anchor_outpoint", "anchor_tx", b"anchor_tx", "block_height", b"block_height", "internal_key", b"internal_key", "merkle_root", b"merkle_root", "tapscript_sibling", b"tapscript_sibling"]) -> None: ...

global___AnchorInfo = AnchorInfo

@typing_extensions.final
class GenesisInfo(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    GENESIS_POINT_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    META_HASH_FIELD_NUMBER: builtins.int
    ASSET_ID_FIELD_NUMBER: builtins.int
    ASSET_TYPE_FIELD_NUMBER: builtins.int
    OUTPUT_INDEX_FIELD_NUMBER: builtins.int
    VERSION_FIELD_NUMBER: builtins.int
    genesis_point: builtins.str
    """The first outpoint of the transaction that created the asset (txid:vout)."""
    name: builtins.str
    """The name of the asset."""
    meta_hash: builtins.bytes
    """The hash of the meta data for this genesis asset."""
    asset_id: builtins.bytes
    """The asset ID that uniquely identifies the asset."""
    asset_type: global___AssetType.ValueType
    """The type of the asset."""
    output_index: builtins.int
    """
    The index of the output that carries the unique Taproot Asset commitment in
    the genesis transaction.
    """
    version: builtins.int
    """The version of the Taproot Asset commitment that created this asset."""
    def __init__(
        self,
        *,
        genesis_point: builtins.str = ...,
        name: builtins.str = ...,
        meta_hash: builtins.bytes = ...,
        asset_id: builtins.bytes = ...,
        asset_type: global___AssetType.ValueType = ...,
        output_index: builtins.int = ...,
        version: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["asset_id", b"asset_id", "asset_type", b"asset_type", "genesis_point", b"genesis_point", "meta_hash", b"meta_hash", "name", b"name", "output_index", b"output_index", "version", b"version"]) -> None: ...

global___GenesisInfo = GenesisInfo

@typing_extensions.final
class AssetGroup(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RAW_GROUP_KEY_FIELD_NUMBER: builtins.int
    TWEAKED_GROUP_KEY_FIELD_NUMBER: builtins.int
    ASSET_WITNESS_FIELD_NUMBER: builtins.int
    raw_group_key: builtins.bytes
    """The raw group key which is a normal public key."""
    tweaked_group_key: builtins.bytes
    """
    The tweaked group key, which is derived based on the genesis point and also
    asset type.
    """
    asset_witness: builtins.bytes
    """
    A witness that authorizes a specific asset to be part of the asset group
    specified by the above key.
    """
    def __init__(
        self,
        *,
        raw_group_key: builtins.bytes = ...,
        tweaked_group_key: builtins.bytes = ...,
        asset_witness: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["asset_witness", b"asset_witness", "raw_group_key", b"raw_group_key", "tweaked_group_key", b"tweaked_group_key"]) -> None: ...

global___AssetGroup = AssetGroup

@typing_extensions.final
class GroupKeyReveal(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RAW_GROUP_KEY_FIELD_NUMBER: builtins.int
    TAPSCRIPT_ROOT_FIELD_NUMBER: builtins.int
    raw_group_key: builtins.bytes
    """The raw group key which is a normal public key."""
    tapscript_root: builtins.bytes
    """The tapscript root included in the tweaked group key, which may be empty."""
    def __init__(
        self,
        *,
        raw_group_key: builtins.bytes = ...,
        tapscript_root: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["raw_group_key", b"raw_group_key", "tapscript_root", b"tapscript_root"]) -> None: ...

global___GroupKeyReveal = GroupKeyReveal

@typing_extensions.final
class GenesisReveal(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    GENESIS_BASE_REVEAL_FIELD_NUMBER: builtins.int
    @property
    def genesis_base_reveal(self) -> global___GenesisInfo:
        """The base genesis information in the genesis reveal."""
    def __init__(
        self,
        *,
        genesis_base_reveal: global___GenesisInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["genesis_base_reveal", b"genesis_base_reveal"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["genesis_base_reveal", b"genesis_base_reveal"]) -> None: ...

global___GenesisReveal = GenesisReveal

@typing_extensions.final
class Asset(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VERSION_FIELD_NUMBER: builtins.int
    ASSET_GENESIS_FIELD_NUMBER: builtins.int
    AMOUNT_FIELD_NUMBER: builtins.int
    LOCK_TIME_FIELD_NUMBER: builtins.int
    RELATIVE_LOCK_TIME_FIELD_NUMBER: builtins.int
    SCRIPT_VERSION_FIELD_NUMBER: builtins.int
    SCRIPT_KEY_FIELD_NUMBER: builtins.int
    SCRIPT_KEY_IS_LOCAL_FIELD_NUMBER: builtins.int
    ASSET_GROUP_FIELD_NUMBER: builtins.int
    CHAIN_ANCHOR_FIELD_NUMBER: builtins.int
    PREV_WITNESSES_FIELD_NUMBER: builtins.int
    IS_SPENT_FIELD_NUMBER: builtins.int
    LEASE_OWNER_FIELD_NUMBER: builtins.int
    LEASE_EXPIRY_FIELD_NUMBER: builtins.int
    IS_BURN_FIELD_NUMBER: builtins.int
    version: global___AssetVersion.ValueType
    """The version of the Taproot Asset."""
    @property
    def asset_genesis(self) -> global___GenesisInfo:
        """The base genesis information of an asset. This information never changes."""
    amount: builtins.int
    """The total amount of the asset stored in this Taproot Asset UTXO."""
    lock_time: builtins.int
    """An optional locktime, as with Bitcoin transactions."""
    relative_lock_time: builtins.int
    """An optional relative lock time, same as Bitcoin transactions."""
    script_version: builtins.int
    """The version of the script, only version 0 is defined at present."""
    script_key: builtins.bytes
    """The script key of the asset, which can be spent under Taproot semantics."""
    script_key_is_local: builtins.bool
    """Indicates whether the script key is known to the wallet of the lnd node
    connected to the Taproot Asset daemon.
    """
    @property
    def asset_group(self) -> global___AssetGroup:
        """The information related to the key group of an asset (if it exists)."""
    @property
    def chain_anchor(self) -> global___AnchorInfo:
        """Describes where in the chain the asset is currently anchored."""
    @property
    def prev_witnesses(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PrevWitness]: ...
    is_spent: builtins.bool
    """Indicates whether the asset has been spent."""
    lease_owner: builtins.bytes
    """If the asset has been leased, this is the owner (application ID) of the
    lease.
    """
    lease_expiry: builtins.int
    """If the asset has been leased, this is the expiry of the lease as a Unix
    timestamp in seconds.
    """
    is_burn: builtins.bool
    """Indicates whether this transfer was an asset burn. If true, the number of
    assets in this output are destroyed and can no longer be spent.
    """
    def __init__(
        self,
        *,
        version: global___AssetVersion.ValueType = ...,
        asset_genesis: global___GenesisInfo | None = ...,
        amount: builtins.int = ...,
        lock_time: builtins.int = ...,
        relative_lock_time: builtins.int = ...,
        script_version: builtins.int = ...,
        script_key: builtins.bytes = ...,
        script_key_is_local: builtins.bool = ...,
        asset_group: global___AssetGroup | None = ...,
        chain_anchor: global___AnchorInfo | None = ...,
        prev_witnesses: collections.abc.Iterable[global___PrevWitness] | None = ...,
        is_spent: builtins.bool = ...,
        lease_owner: builtins.bytes = ...,
        lease_expiry: builtins.int = ...,
        is_burn: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["asset_genesis", b"asset_genesis", "asset_group", b"asset_group", "chain_anchor", b"chain_anchor"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["amount", b"amount", "asset_genesis", b"asset_genesis", "asset_group", b"asset_group", "chain_anchor", b"chain_anchor", "is_burn", b"is_burn", "is_spent", b"is_spent", "lease_expiry", b"lease_expiry", "lease_owner", b"lease_owner", "lock_time", b"lock_time", "prev_witnesses", b"prev_witnesses", "relative_lock_time", b"relative_lock_time", "script_key", b"script_key", "script_key_is_local", b"script_key_is_local", "script_version", b"script_version", "version", b"version"]) -> None: ...

global___Asset = Asset

@typing_extensions.final
class PrevWitness(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PREV_ID_FIELD_NUMBER: builtins.int
    TX_WITNESS_FIELD_NUMBER: builtins.int
    SPLIT_COMMITMENT_FIELD_NUMBER: builtins.int
    @property
    def prev_id(self) -> global___PrevInputAsset: ...
    @property
    def tx_witness(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.bytes]: ...
    @property
    def split_commitment(self) -> global___SplitCommitment: ...
    def __init__(
        self,
        *,
        prev_id: global___PrevInputAsset | None = ...,
        tx_witness: collections.abc.Iterable[builtins.bytes] | None = ...,
        split_commitment: global___SplitCommitment | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["prev_id", b"prev_id", "split_commitment", b"split_commitment"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["prev_id", b"prev_id", "split_commitment", b"split_commitment", "tx_witness", b"tx_witness"]) -> None: ...

global___PrevWitness = PrevWitness

@typing_extensions.final
class SplitCommitment(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ROOT_ASSET_FIELD_NUMBER: builtins.int
    @property
    def root_asset(self) -> global___Asset: ...
    def __init__(
        self,
        *,
        root_asset: global___Asset | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["root_asset", b"root_asset"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["root_asset", b"root_asset"]) -> None: ...

global___SplitCommitment = SplitCommitment

@typing_extensions.final
class ListAssetResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ASSETS_FIELD_NUMBER: builtins.int
    @property
    def assets(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Asset]: ...
    def __init__(
        self,
        *,
        assets: collections.abc.Iterable[global___Asset] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["assets", b"assets"]) -> None: ...

global___ListAssetResponse = ListAssetResponse

@typing_extensions.final
class ListUtxosRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    INCLUDE_LEASED_FIELD_NUMBER: builtins.int
    include_leased: builtins.bool
    def __init__(
        self,
        *,
        include_leased: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["include_leased", b"include_leased"]) -> None: ...

global___ListUtxosRequest = ListUtxosRequest

@typing_extensions.final
class ManagedUtxo(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    OUT_POINT_FIELD_NUMBER: builtins.int
    AMT_SAT_FIELD_NUMBER: builtins.int
    INTERNAL_KEY_FIELD_NUMBER: builtins.int
    TAPROOT_ASSET_ROOT_FIELD_NUMBER: builtins.int
    MERKLE_ROOT_FIELD_NUMBER: builtins.int
    ASSETS_FIELD_NUMBER: builtins.int
    out_point: builtins.str
    """The outpoint of the UTXO."""
    amt_sat: builtins.int
    """The UTXO amount in satoshis."""
    internal_key: builtins.bytes
    """The internal key used for the on-chain output."""
    taproot_asset_root: builtins.bytes
    """The Taproot Asset root commitment hash."""
    merkle_root: builtins.bytes
    """
    The Taproot merkle root hash committed to by the outpoint of this UTXO.
    If there is no Tapscript sibling, this is equal to the Taproot Asset root
    commitment hash.
    """
    @property
    def assets(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Asset]:
        """The assets held at this UTXO."""
    def __init__(
        self,
        *,
        out_point: builtins.str = ...,
        amt_sat: builtins.int = ...,
        internal_key: builtins.bytes = ...,
        taproot_asset_root: builtins.bytes = ...,
        merkle_root: builtins.bytes = ...,
        assets: collections.abc.Iterable[global___Asset] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["amt_sat", b"amt_sat", "assets", b"assets", "internal_key", b"internal_key", "merkle_root", b"merkle_root", "out_point", b"out_point", "taproot_asset_root", b"taproot_asset_root"]) -> None: ...

global___ManagedUtxo = ManagedUtxo

@typing_extensions.final
class ListUtxosResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class ManagedUtxosEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___ManagedUtxo: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___ManagedUtxo | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    MANAGED_UTXOS_FIELD_NUMBER: builtins.int
    @property
    def managed_utxos(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___ManagedUtxo]:
        """The set of UTXOs managed by the daemon."""
    def __init__(
        self,
        *,
        managed_utxos: collections.abc.Mapping[builtins.str, global___ManagedUtxo] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["managed_utxos", b"managed_utxos"]) -> None: ...

global___ListUtxosResponse = ListUtxosResponse

@typing_extensions.final
class ListGroupsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___ListGroupsRequest = ListGroupsRequest

@typing_extensions.final
class AssetHumanReadable(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    AMOUNT_FIELD_NUMBER: builtins.int
    LOCK_TIME_FIELD_NUMBER: builtins.int
    RELATIVE_LOCK_TIME_FIELD_NUMBER: builtins.int
    TAG_FIELD_NUMBER: builtins.int
    META_HASH_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    VERSION_FIELD_NUMBER: builtins.int
    id: builtins.bytes
    """The ID of the asset."""
    amount: builtins.int
    """The amount of the asset."""
    lock_time: builtins.int
    """An optional locktime, as with Bitcoin transactions."""
    relative_lock_time: builtins.int
    """An optional relative locktime, as with Bitcoin transactions."""
    tag: builtins.str
    """The name of the asset."""
    meta_hash: builtins.bytes
    """The metadata hash of the asset."""
    type: global___AssetType.ValueType
    """The type of the asset."""
    version: global___AssetVersion.ValueType
    """The version of the asset."""
    def __init__(
        self,
        *,
        id: builtins.bytes = ...,
        amount: builtins.int = ...,
        lock_time: builtins.int = ...,
        relative_lock_time: builtins.int = ...,
        tag: builtins.str = ...,
        meta_hash: builtins.bytes = ...,
        type: global___AssetType.ValueType = ...,
        version: global___AssetVersion.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["amount", b"amount", "id", b"id", "lock_time", b"lock_time", "meta_hash", b"meta_hash", "relative_lock_time", b"relative_lock_time", "tag", b"tag", "type", b"type", "version", b"version"]) -> None: ...

global___AssetHumanReadable = AssetHumanReadable

@typing_extensions.final
class GroupedAssets(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ASSETS_FIELD_NUMBER: builtins.int
    @property
    def assets(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AssetHumanReadable]:
        """A list of assets with the same group key."""
    def __init__(
        self,
        *,
        assets: collections.abc.Iterable[global___AssetHumanReadable] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["assets", b"assets"]) -> None: ...

global___GroupedAssets = GroupedAssets

@typing_extensions.final
class ListGroupsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class GroupsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___GroupedAssets: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___GroupedAssets | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    GROUPS_FIELD_NUMBER: builtins.int
    @property
    def groups(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___GroupedAssets]:
        """The set of assets with a group key."""
    def __init__(
        self,
        *,
        groups: collections.abc.Mapping[builtins.str, global___GroupedAssets] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["groups", b"groups"]) -> None: ...

global___ListGroupsResponse = ListGroupsResponse

@typing_extensions.final
class ListBalancesRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ASSET_ID_FIELD_NUMBER: builtins.int
    GROUP_KEY_FIELD_NUMBER: builtins.int
    ASSET_FILTER_FIELD_NUMBER: builtins.int
    GROUP_KEY_FILTER_FIELD_NUMBER: builtins.int
    asset_id: builtins.bool
    """Group results by asset IDs."""
    group_key: builtins.bool
    """Group results by group keys."""
    asset_filter: builtins.bytes
    """If the query results should grouped by asset ids, then an optional asset
    filter may be provided to query balance of a specific asset.
    """
    group_key_filter: builtins.bytes
    """If the query results should be grouped by group keys, then an optional
    group key filter may be provided to query the balance of a specific
    asset group.
    """
    def __init__(
        self,
        *,
        asset_id: builtins.bool = ...,
        group_key: builtins.bool = ...,
        asset_filter: builtins.bytes = ...,
        group_key_filter: builtins.bytes = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["asset_id", b"asset_id", "group_by", b"group_by", "group_key", b"group_key"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["asset_filter", b"asset_filter", "asset_id", b"asset_id", "group_by", b"group_by", "group_key", b"group_key", "group_key_filter", b"group_key_filter"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["group_by", b"group_by"]) -> typing_extensions.Literal["asset_id", "group_key"] | None: ...

global___ListBalancesRequest = ListBalancesRequest

@typing_extensions.final
class AssetBalance(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ASSET_GENESIS_FIELD_NUMBER: builtins.int
    BALANCE_FIELD_NUMBER: builtins.int
    @property
    def asset_genesis(self) -> global___GenesisInfo:
        """The base genesis information of an asset. This information never changes."""
    balance: builtins.int
    """The balance of the asset owned by the target daemon."""
    def __init__(
        self,
        *,
        asset_genesis: global___GenesisInfo | None = ...,
        balance: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["asset_genesis", b"asset_genesis"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["asset_genesis", b"asset_genesis", "balance", b"balance"]) -> None: ...

global___AssetBalance = AssetBalance

@typing_extensions.final
class AssetGroupBalance(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    GROUP_KEY_FIELD_NUMBER: builtins.int
    BALANCE_FIELD_NUMBER: builtins.int
    group_key: builtins.bytes
    """The group key or nil aggregating assets that don't have a group."""
    balance: builtins.int
    """The total balance of the assets in the group."""
    def __init__(
        self,
        *,
        group_key: builtins.bytes = ...,
        balance: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["balance", b"balance", "group_key", b"group_key"]) -> None: ...

global___AssetGroupBalance = AssetGroupBalance

@typing_extensions.final
class ListBalancesResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class AssetBalancesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___AssetBalance: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___AssetBalance | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing_extensions.final
    class AssetGroupBalancesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___AssetGroupBalance: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___AssetGroupBalance | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    ASSET_BALANCES_FIELD_NUMBER: builtins.int
    ASSET_GROUP_BALANCES_FIELD_NUMBER: builtins.int
    @property
    def asset_balances(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___AssetBalance]: ...
    @property
    def asset_group_balances(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___AssetGroupBalance]: ...
    def __init__(
        self,
        *,
        asset_balances: collections.abc.Mapping[builtins.str, global___AssetBalance] | None = ...,
        asset_group_balances: collections.abc.Mapping[builtins.str, global___AssetGroupBalance] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["asset_balances", b"asset_balances", "asset_group_balances", b"asset_group_balances"]) -> None: ...

global___ListBalancesResponse = ListBalancesResponse

@typing_extensions.final
class ListTransfersRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___ListTransfersRequest = ListTransfersRequest

@typing_extensions.final
class ListTransfersResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TRANSFERS_FIELD_NUMBER: builtins.int
    @property
    def transfers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AssetTransfer]:
        """The unordered list of outgoing asset transfers."""
    def __init__(
        self,
        *,
        transfers: collections.abc.Iterable[global___AssetTransfer] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["transfers", b"transfers"]) -> None: ...

global___ListTransfersResponse = ListTransfersResponse

@typing_extensions.final
class AssetTransfer(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TRANSFER_TIMESTAMP_FIELD_NUMBER: builtins.int
    ANCHOR_TX_HASH_FIELD_NUMBER: builtins.int
    ANCHOR_TX_HEIGHT_HINT_FIELD_NUMBER: builtins.int
    ANCHOR_TX_CHAIN_FEES_FIELD_NUMBER: builtins.int
    INPUTS_FIELD_NUMBER: builtins.int
    OUTPUTS_FIELD_NUMBER: builtins.int
    transfer_timestamp: builtins.int
    anchor_tx_hash: builtins.bytes
    """The new transaction that commits to the set of Taproot Assets found
    at the above new anchor point.
    """
    anchor_tx_height_hint: builtins.int
    anchor_tx_chain_fees: builtins.int
    @property
    def inputs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TransferInput]:
        """Describes the set of spent assets."""
    @property
    def outputs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TransferOutput]:
        """Describes the set of newly created asset outputs."""
    def __init__(
        self,
        *,
        transfer_timestamp: builtins.int = ...,
        anchor_tx_hash: builtins.bytes = ...,
        anchor_tx_height_hint: builtins.int = ...,
        anchor_tx_chain_fees: builtins.int = ...,
        inputs: collections.abc.Iterable[global___TransferInput] | None = ...,
        outputs: collections.abc.Iterable[global___TransferOutput] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["anchor_tx_chain_fees", b"anchor_tx_chain_fees", "anchor_tx_hash", b"anchor_tx_hash", "anchor_tx_height_hint", b"anchor_tx_height_hint", "inputs", b"inputs", "outputs", b"outputs", "transfer_timestamp", b"transfer_timestamp"]) -> None: ...

global___AssetTransfer = AssetTransfer

@typing_extensions.final
class TransferInput(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ANCHOR_POINT_FIELD_NUMBER: builtins.int
    ASSET_ID_FIELD_NUMBER: builtins.int
    SCRIPT_KEY_FIELD_NUMBER: builtins.int
    AMOUNT_FIELD_NUMBER: builtins.int
    anchor_point: builtins.str
    """The old/current location of the Taproot Asset commitment that was spent
    as an input.
    """
    asset_id: builtins.bytes
    """The ID of the asset that was spent."""
    script_key: builtins.bytes
    """The script key of the asset that was spent."""
    amount: builtins.int
    """The amount of the asset that was spent."""
    def __init__(
        self,
        *,
        anchor_point: builtins.str = ...,
        asset_id: builtins.bytes = ...,
        script_key: builtins.bytes = ...,
        amount: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["amount", b"amount", "anchor_point", b"anchor_point", "asset_id", b"asset_id", "script_key", b"script_key"]) -> None: ...

global___TransferInput = TransferInput

@typing_extensions.final
class TransferOutputAnchor(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    OUTPOINT_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    INTERNAL_KEY_FIELD_NUMBER: builtins.int
    TAPROOT_ASSET_ROOT_FIELD_NUMBER: builtins.int
    MERKLE_ROOT_FIELD_NUMBER: builtins.int
    TAPSCRIPT_SIBLING_FIELD_NUMBER: builtins.int
    NUM_PASSIVE_ASSETS_FIELD_NUMBER: builtins.int
    outpoint: builtins.str
    """The new location of the Taproot Asset commitment that was created on
    chain.
    """
    value: builtins.int
    internal_key: builtins.bytes
    taproot_asset_root: builtins.bytes
    merkle_root: builtins.bytes
    tapscript_sibling: builtins.bytes
    num_passive_assets: builtins.int
    def __init__(
        self,
        *,
        outpoint: builtins.str = ...,
        value: builtins.int = ...,
        internal_key: builtins.bytes = ...,
        taproot_asset_root: builtins.bytes = ...,
        merkle_root: builtins.bytes = ...,
        tapscript_sibling: builtins.bytes = ...,
        num_passive_assets: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["internal_key", b"internal_key", "merkle_root", b"merkle_root", "num_passive_assets", b"num_passive_assets", "outpoint", b"outpoint", "taproot_asset_root", b"taproot_asset_root", "tapscript_sibling", b"tapscript_sibling", "value", b"value"]) -> None: ...

global___TransferOutputAnchor = TransferOutputAnchor

@typing_extensions.final
class TransferOutput(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ANCHOR_FIELD_NUMBER: builtins.int
    SCRIPT_KEY_FIELD_NUMBER: builtins.int
    SCRIPT_KEY_IS_LOCAL_FIELD_NUMBER: builtins.int
    AMOUNT_FIELD_NUMBER: builtins.int
    NEW_PROOF_BLOB_FIELD_NUMBER: builtins.int
    SPLIT_COMMIT_ROOT_HASH_FIELD_NUMBER: builtins.int
    OUTPUT_TYPE_FIELD_NUMBER: builtins.int
    ASSET_VERSION_FIELD_NUMBER: builtins.int
    @property
    def anchor(self) -> global___TransferOutputAnchor: ...
    script_key: builtins.bytes
    script_key_is_local: builtins.bool
    amount: builtins.int
    new_proof_blob: builtins.bytes
    """The new individual transition proof (not a full proof file) that proves
    the inclusion of the new asset within the new AnchorTx.
    """
    split_commit_root_hash: builtins.bytes
    output_type: global___OutputType.ValueType
    asset_version: global___AssetVersion.ValueType
    def __init__(
        self,
        *,
        anchor: global___TransferOutputAnchor | None = ...,
        script_key: builtins.bytes = ...,
        script_key_is_local: builtins.bool = ...,
        amount: builtins.int = ...,
        new_proof_blob: builtins.bytes = ...,
        split_commit_root_hash: builtins.bytes = ...,
        output_type: global___OutputType.ValueType = ...,
        asset_version: global___AssetVersion.ValueType = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["anchor", b"anchor"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["amount", b"amount", "anchor", b"anchor", "asset_version", b"asset_version", "new_proof_blob", b"new_proof_blob", "output_type", b"output_type", "script_key", b"script_key", "script_key_is_local", b"script_key_is_local", "split_commit_root_hash", b"split_commit_root_hash"]) -> None: ...

global___TransferOutput = TransferOutput

@typing_extensions.final
class StopRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___StopRequest = StopRequest

@typing_extensions.final
class StopResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___StopResponse = StopResponse

@typing_extensions.final
class DebugLevelRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SHOW_FIELD_NUMBER: builtins.int
    LEVEL_SPEC_FIELD_NUMBER: builtins.int
    show: builtins.bool
    """If true, all the valid debug sub-systems will be returned."""
    level_spec: builtins.str
    def __init__(
        self,
        *,
        show: builtins.bool = ...,
        level_spec: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["level_spec", b"level_spec", "show", b"show"]) -> None: ...

global___DebugLevelRequest = DebugLevelRequest

@typing_extensions.final
class DebugLevelResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SUB_SYSTEMS_FIELD_NUMBER: builtins.int
    sub_systems: builtins.str
    def __init__(
        self,
        *,
        sub_systems: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["sub_systems", b"sub_systems"]) -> None: ...

global___DebugLevelResponse = DebugLevelResponse

@typing_extensions.final
class Addr(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ENCODED_FIELD_NUMBER: builtins.int
    ASSET_ID_FIELD_NUMBER: builtins.int
    ASSET_TYPE_FIELD_NUMBER: builtins.int
    AMOUNT_FIELD_NUMBER: builtins.int
    GROUP_KEY_FIELD_NUMBER: builtins.int
    SCRIPT_KEY_FIELD_NUMBER: builtins.int
    INTERNAL_KEY_FIELD_NUMBER: builtins.int
    TAPSCRIPT_SIBLING_FIELD_NUMBER: builtins.int
    TAPROOT_OUTPUT_KEY_FIELD_NUMBER: builtins.int
    PROOF_COURIER_ADDR_FIELD_NUMBER: builtins.int
    ASSET_VERSION_FIELD_NUMBER: builtins.int
    encoded: builtins.str
    """The bech32 encoded Taproot Asset address."""
    asset_id: builtins.bytes
    """The asset ID that uniquely identifies the asset."""
    asset_type: global___AssetType.ValueType
    """The type of the asset."""
    amount: builtins.int
    """The total amount of the asset stored in this Taproot Asset UTXO."""
    group_key: builtins.bytes
    """The group key of the asset (if it exists)"""
    script_key: builtins.bytes
    """
    The specific script key the asset must commit to in order to transfer
    ownership to the creator of the address.
    """
    internal_key: builtins.bytes
    """The internal key used for the on-chain output."""
    tapscript_sibling: builtins.bytes
    """
    The optional serialized tapscript sibling preimage to use for the receiving
    asset. This is usually empty as it is only needed when there should be an
    additional script path in the Taproot tree alongside the Taproot Asset
    commitment of the asset.
    """
    taproot_output_key: builtins.bytes
    """
    The tweaked internal key that commits to the asset and represents the
    on-chain output key the Bitcoin transaction must send to in order to
    transfer assets described in this address.
    """
    proof_courier_addr: builtins.str
    """The address of the proof courier service used in proof transfer."""
    asset_version: global___AssetVersion.ValueType
    """The asset version of the address."""
    def __init__(
        self,
        *,
        encoded: builtins.str = ...,
        asset_id: builtins.bytes = ...,
        asset_type: global___AssetType.ValueType = ...,
        amount: builtins.int = ...,
        group_key: builtins.bytes = ...,
        script_key: builtins.bytes = ...,
        internal_key: builtins.bytes = ...,
        tapscript_sibling: builtins.bytes = ...,
        taproot_output_key: builtins.bytes = ...,
        proof_courier_addr: builtins.str = ...,
        asset_version: global___AssetVersion.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["amount", b"amount", "asset_id", b"asset_id", "asset_type", b"asset_type", "asset_version", b"asset_version", "encoded", b"encoded", "group_key", b"group_key", "internal_key", b"internal_key", "proof_courier_addr", b"proof_courier_addr", "script_key", b"script_key", "taproot_output_key", b"taproot_output_key", "tapscript_sibling", b"tapscript_sibling"]) -> None: ...

global___Addr = Addr

@typing_extensions.final
class QueryAddrRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CREATED_AFTER_FIELD_NUMBER: builtins.int
    CREATED_BEFORE_FIELD_NUMBER: builtins.int
    LIMIT_FIELD_NUMBER: builtins.int
    OFFSET_FIELD_NUMBER: builtins.int
    created_after: builtins.int
    """
    If set, then only addresses created after this Unix timestamp will be
    returned.
    """
    created_before: builtins.int
    """
    If set, then only addresses created before this Unix timestamp will be
    returned.
    """
    limit: builtins.int
    """The max number of addresses that should be returned."""
    offset: builtins.int
    """The offset from the addresses that should be returned."""
    def __init__(
        self,
        *,
        created_after: builtins.int = ...,
        created_before: builtins.int = ...,
        limit: builtins.int = ...,
        offset: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["created_after", b"created_after", "created_before", b"created_before", "limit", b"limit", "offset", b"offset"]) -> None: ...

global___QueryAddrRequest = QueryAddrRequest

@typing_extensions.final
class QueryAddrResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ADDRS_FIELD_NUMBER: builtins.int
    @property
    def addrs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Addr]: ...
    def __init__(
        self,
        *,
        addrs: collections.abc.Iterable[global___Addr] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["addrs", b"addrs"]) -> None: ...

global___QueryAddrResponse = QueryAddrResponse

@typing_extensions.final
class NewAddrRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ASSET_ID_FIELD_NUMBER: builtins.int
    AMT_FIELD_NUMBER: builtins.int
    SCRIPT_KEY_FIELD_NUMBER: builtins.int
    INTERNAL_KEY_FIELD_NUMBER: builtins.int
    TAPSCRIPT_SIBLING_FIELD_NUMBER: builtins.int
    PROOF_COURIER_ADDR_FIELD_NUMBER: builtins.int
    ASSET_VERSION_FIELD_NUMBER: builtins.int
    asset_id: builtins.bytes
    amt: builtins.int
    @property
    def script_key(self) -> global___ScriptKey:
        """
        The optional script key that the receiving asset should be locked to. If no
        script key is provided, a normal BIP-86 key will be derived from the
        underlying wallet.

        NOTE: The script_key and internal_key fields should either both be set or
        both be empty.
        """
    @property
    def internal_key(self) -> global___KeyDescriptor:
        """
        The optional internal key of the receiving BTC level transaction output on
        which the receiving asset transfers will be committed to. If no internal key
        is provided, a key will be derived from the underlying wallet.

        NOTE: The script_key and internal_key fields should either both be set or
        both be empty.
        """
    tapscript_sibling: builtins.bytes
    """
    The optional serialized tapscript sibling preimage to use for the receiving
    asset. This is usually empty as it is only needed when there should be an
    additional script path in the Taproot tree alongside the Taproot Asset
    commitment of the asset.
    """
    proof_courier_addr: builtins.str
    """
    An optional proof courier address for use in proof transfer. If unspecified,
    the daemon configured default address will be used.
    """
    asset_version: global___AssetVersion.ValueType
    """
    The asset version to use when sending/receiving to/from this address.
    """
    def __init__(
        self,
        *,
        asset_id: builtins.bytes = ...,
        amt: builtins.int = ...,
        script_key: global___ScriptKey | None = ...,
        internal_key: global___KeyDescriptor | None = ...,
        tapscript_sibling: builtins.bytes = ...,
        proof_courier_addr: builtins.str = ...,
        asset_version: global___AssetVersion.ValueType = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["internal_key", b"internal_key", "script_key", b"script_key"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["amt", b"amt", "asset_id", b"asset_id", "asset_version", b"asset_version", "internal_key", b"internal_key", "proof_courier_addr", b"proof_courier_addr", "script_key", b"script_key", "tapscript_sibling", b"tapscript_sibling"]) -> None: ...

global___NewAddrRequest = NewAddrRequest

@typing_extensions.final
class ScriptKey(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PUB_KEY_FIELD_NUMBER: builtins.int
    KEY_DESC_FIELD_NUMBER: builtins.int
    TAP_TWEAK_FIELD_NUMBER: builtins.int
    pub_key: builtins.bytes
    """
    The full Taproot output key the asset is locked to. This is either a BIP-86
    key if the tap_tweak below is empty, or a key with the tap tweak applied to
    it.
    """
    @property
    def key_desc(self) -> global___KeyDescriptor:
        """
        The key descriptor describing the internal key of the above Taproot key.
        """
    tap_tweak: builtins.bytes
    """
    The optional Taproot tweak to apply to the above internal key. If this is
    empty then a BIP-86 style tweak is applied to the internal key.
    """
    def __init__(
        self,
        *,
        pub_key: builtins.bytes = ...,
        key_desc: global___KeyDescriptor | None = ...,
        tap_tweak: builtins.bytes = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["key_desc", b"key_desc"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["key_desc", b"key_desc", "pub_key", b"pub_key", "tap_tweak", b"tap_tweak"]) -> None: ...

global___ScriptKey = ScriptKey

@typing_extensions.final
class KeyLocator(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEY_FAMILY_FIELD_NUMBER: builtins.int
    KEY_INDEX_FIELD_NUMBER: builtins.int
    key_family: builtins.int
    """
    The family of key being identified.
    """
    key_index: builtins.int
    """
    The precise index of the key being identified.
    """
    def __init__(
        self,
        *,
        key_family: builtins.int = ...,
        key_index: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["key_family", b"key_family", "key_index", b"key_index"]) -> None: ...

global___KeyLocator = KeyLocator

@typing_extensions.final
class KeyDescriptor(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RAW_KEY_BYTES_FIELD_NUMBER: builtins.int
    KEY_LOC_FIELD_NUMBER: builtins.int
    raw_key_bytes: builtins.bytes
    """
    The raw bytes of the key being identified.
    """
    @property
    def key_loc(self) -> global___KeyLocator:
        """
        The key locator that identifies which key to use for signing.
        """
    def __init__(
        self,
        *,
        raw_key_bytes: builtins.bytes = ...,
        key_loc: global___KeyLocator | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["key_loc", b"key_loc"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["key_loc", b"key_loc", "raw_key_bytes", b"raw_key_bytes"]) -> None: ...

global___KeyDescriptor = KeyDescriptor

@typing_extensions.final
class DecodeAddrRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ADDR_FIELD_NUMBER: builtins.int
    addr: builtins.str
    def __init__(
        self,
        *,
        addr: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["addr", b"addr"]) -> None: ...

global___DecodeAddrRequest = DecodeAddrRequest

@typing_extensions.final
class ProofFile(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RAW_PROOF_FILE_FIELD_NUMBER: builtins.int
    GENESIS_POINT_FIELD_NUMBER: builtins.int
    raw_proof_file: builtins.bytes
    """The raw proof file encoded as bytes. Must be a file and not just an
    individual mint/transfer proof.
    """
    genesis_point: builtins.str
    def __init__(
        self,
        *,
        raw_proof_file: builtins.bytes = ...,
        genesis_point: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["genesis_point", b"genesis_point", "raw_proof_file", b"raw_proof_file"]) -> None: ...

global___ProofFile = ProofFile

@typing_extensions.final
class DecodedProof(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PROOF_AT_DEPTH_FIELD_NUMBER: builtins.int
    NUMBER_OF_PROOFS_FIELD_NUMBER: builtins.int
    ASSET_FIELD_NUMBER: builtins.int
    META_REVEAL_FIELD_NUMBER: builtins.int
    TX_MERKLE_PROOF_FIELD_NUMBER: builtins.int
    INCLUSION_PROOF_FIELD_NUMBER: builtins.int
    EXCLUSION_PROOFS_FIELD_NUMBER: builtins.int
    SPLIT_ROOT_PROOF_FIELD_NUMBER: builtins.int
    NUM_ADDITIONAL_INPUTS_FIELD_NUMBER: builtins.int
    CHALLENGE_WITNESS_FIELD_NUMBER: builtins.int
    IS_BURN_FIELD_NUMBER: builtins.int
    GENESIS_REVEAL_FIELD_NUMBER: builtins.int
    GROUP_KEY_REVEAL_FIELD_NUMBER: builtins.int
    proof_at_depth: builtins.int
    """The index depth of the decoded proof, with 0 being the latest proof."""
    number_of_proofs: builtins.int
    """The total number of proofs contained in the decoded proof file (this will
    always be 1 if a single mint/transition proof was given as the raw_proof
    instead of a file).
    """
    @property
    def asset(self) -> global___Asset:
        """The asset referenced in the proof."""
    @property
    def meta_reveal(self) -> global___AssetMeta:
        """The reveal meta data associated with the proof, if available."""
    tx_merkle_proof: builtins.bytes
    """The merkle proof for AnchorTx used to prove its
    inclusion within BlockHeader.
    """
    inclusion_proof: builtins.bytes
    """The TaprootProof proving the new inclusion of the
    resulting asset within AnchorTx.
    """
    @property
    def exclusion_proofs(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.bytes]:
        """The set of TaprootProofs proving the exclusion of
        the resulting asset from all other Taproot outputs within AnchorTx.
        """
    split_root_proof: builtins.bytes
    """An optional TaprootProof needed if this asset is
    the result of a split. SplitRootProof proves inclusion of the root
    asset of the split.
    """
    num_additional_inputs: builtins.int
    """The number of additional nested full proofs for any inputs found within
    the resulting asset.
    """
    @property
    def challenge_witness(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.bytes]:
        """ChallengeWitness is an optional virtual transaction witness that serves
        as an ownership proof for the asset. If this is non-nil, then it is a
        valid transfer witness for a 1-input, 1-output virtual transaction that
        spends the asset in this proof and sends it to the NUMS key, to prove
        that the creator of the proof is able to produce a valid signature to
        spend the asset.
        """
    is_burn: builtins.bool
    """Indicates whether the state transition this proof represents is a burn,
    meaning that the assets were provably destroyed and can no longer be
    spent.
    """
    @property
    def genesis_reveal(self) -> global___GenesisReveal:
        """GenesisReveal is an optional field that is the Genesis information for
        the asset. This is required for minting proofs.
        """
    @property
    def group_key_reveal(self) -> global___GroupKeyReveal:
        """GroupKeyReveal is an optional field that includes the information needed
        to derive the tweaked group key.
        """
    def __init__(
        self,
        *,
        proof_at_depth: builtins.int = ...,
        number_of_proofs: builtins.int = ...,
        asset: global___Asset | None = ...,
        meta_reveal: global___AssetMeta | None = ...,
        tx_merkle_proof: builtins.bytes = ...,
        inclusion_proof: builtins.bytes = ...,
        exclusion_proofs: collections.abc.Iterable[builtins.bytes] | None = ...,
        split_root_proof: builtins.bytes = ...,
        num_additional_inputs: builtins.int = ...,
        challenge_witness: collections.abc.Iterable[builtins.bytes] | None = ...,
        is_burn: builtins.bool = ...,
        genesis_reveal: global___GenesisReveal | None = ...,
        group_key_reveal: global___GroupKeyReveal | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["asset", b"asset", "genesis_reveal", b"genesis_reveal", "group_key_reveal", b"group_key_reveal", "meta_reveal", b"meta_reveal"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["asset", b"asset", "challenge_witness", b"challenge_witness", "exclusion_proofs", b"exclusion_proofs", "genesis_reveal", b"genesis_reveal", "group_key_reveal", b"group_key_reveal", "inclusion_proof", b"inclusion_proof", "is_burn", b"is_burn", "meta_reveal", b"meta_reveal", "num_additional_inputs", b"num_additional_inputs", "number_of_proofs", b"number_of_proofs", "proof_at_depth", b"proof_at_depth", "split_root_proof", b"split_root_proof", "tx_merkle_proof", b"tx_merkle_proof"]) -> None: ...

global___DecodedProof = DecodedProof

@typing_extensions.final
class VerifyProofResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALID_FIELD_NUMBER: builtins.int
    DECODED_PROOF_FIELD_NUMBER: builtins.int
    valid: builtins.bool
    @property
    def decoded_proof(self) -> global___DecodedProof:
        """The decoded last proof in the file if the proof file was valid."""
    def __init__(
        self,
        *,
        valid: builtins.bool = ...,
        decoded_proof: global___DecodedProof | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["decoded_proof", b"decoded_proof"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["decoded_proof", b"decoded_proof", "valid", b"valid"]) -> None: ...

global___VerifyProofResponse = VerifyProofResponse

@typing_extensions.final
class DecodeProofRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RAW_PROOF_FIELD_NUMBER: builtins.int
    PROOF_AT_DEPTH_FIELD_NUMBER: builtins.int
    WITH_PREV_WITNESSES_FIELD_NUMBER: builtins.int
    WITH_META_REVEAL_FIELD_NUMBER: builtins.int
    raw_proof: builtins.bytes
    """The raw proof bytes to decode. This can be a full proof file or a single
    mint/transition proof. If it is a full proof file, the proof_at_depth
    field will be used to determine which individual proof within the file to
    decode.
    """
    proof_at_depth: builtins.int
    """The index depth of the decoded proof, with 0 being the latest proof. This
    is ignored if the raw_proof is a single mint/transition proof and not a
    proof file.
    """
    with_prev_witnesses: builtins.bool
    """An option to include previous witnesses in decoding."""
    with_meta_reveal: builtins.bool
    """An option to attempt to retrieve the meta data associated with the proof."""
    def __init__(
        self,
        *,
        raw_proof: builtins.bytes = ...,
        proof_at_depth: builtins.int = ...,
        with_prev_witnesses: builtins.bool = ...,
        with_meta_reveal: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["proof_at_depth", b"proof_at_depth", "raw_proof", b"raw_proof", "with_meta_reveal", b"with_meta_reveal", "with_prev_witnesses", b"with_prev_witnesses"]) -> None: ...

global___DecodeProofRequest = DecodeProofRequest

@typing_extensions.final
class DecodeProofResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DECODED_PROOF_FIELD_NUMBER: builtins.int
    @property
    def decoded_proof(self) -> global___DecodedProof: ...
    def __init__(
        self,
        *,
        decoded_proof: global___DecodedProof | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["decoded_proof", b"decoded_proof"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["decoded_proof", b"decoded_proof"]) -> None: ...

global___DecodeProofResponse = DecodeProofResponse

@typing_extensions.final
class ExportProofRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ASSET_ID_FIELD_NUMBER: builtins.int
    SCRIPT_KEY_FIELD_NUMBER: builtins.int
    asset_id: builtins.bytes
    script_key: builtins.bytes
    def __init__(
        self,
        *,
        asset_id: builtins.bytes = ...,
        script_key: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["asset_id", b"asset_id", "script_key", b"script_key"]) -> None: ...

global___ExportProofRequest = ExportProofRequest

@typing_extensions.final
class AddrEvent(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CREATION_TIME_UNIX_SECONDS_FIELD_NUMBER: builtins.int
    ADDR_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    OUTPOINT_FIELD_NUMBER: builtins.int
    UTXO_AMT_SAT_FIELD_NUMBER: builtins.int
    TAPROOT_SIBLING_FIELD_NUMBER: builtins.int
    CONFIRMATION_HEIGHT_FIELD_NUMBER: builtins.int
    HAS_PROOF_FIELD_NUMBER: builtins.int
    creation_time_unix_seconds: builtins.int
    """The time the event was created in unix timestamp seconds."""
    @property
    def addr(self) -> global___Addr:
        """The address the event was created for."""
    status: global___AddrEventStatus.ValueType
    """The current status of the event."""
    outpoint: builtins.str
    """The outpoint that contains the inbound asset transfer."""
    utxo_amt_sat: builtins.int
    """
    The amount in satoshis that were transferred on chain along with the asset.
    This amount is independent of the requested asset amount, which can be
    looked up on the address.
    """
    taproot_sibling: builtins.bytes
    """
    The taproot sibling hash that was used to send to the Taproot output.
    """
    confirmation_height: builtins.int
    """
    The height at which the on-chain output was confirmed. If this is zero, it
    means the output is unconfirmed.
    """
    has_proof: builtins.bool
    """
    Indicates whether a proof file can be found for the address' asset ID and
    script key.
    """
    def __init__(
        self,
        *,
        creation_time_unix_seconds: builtins.int = ...,
        addr: global___Addr | None = ...,
        status: global___AddrEventStatus.ValueType = ...,
        outpoint: builtins.str = ...,
        utxo_amt_sat: builtins.int = ...,
        taproot_sibling: builtins.bytes = ...,
        confirmation_height: builtins.int = ...,
        has_proof: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["addr", b"addr"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["addr", b"addr", "confirmation_height", b"confirmation_height", "creation_time_unix_seconds", b"creation_time_unix_seconds", "has_proof", b"has_proof", "outpoint", b"outpoint", "status", b"status", "taproot_sibling", b"taproot_sibling", "utxo_amt_sat", b"utxo_amt_sat"]) -> None: ...

global___AddrEvent = AddrEvent

@typing_extensions.final
class AddrReceivesRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FILTER_ADDR_FIELD_NUMBER: builtins.int
    FILTER_STATUS_FIELD_NUMBER: builtins.int
    filter_addr: builtins.str
    """Filter receives by a specific address. Leave empty to get all receives."""
    filter_status: global___AddrEventStatus.ValueType
    """Filter receives by a specific status. Leave empty to get all receives."""
    def __init__(
        self,
        *,
        filter_addr: builtins.str = ...,
        filter_status: global___AddrEventStatus.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["filter_addr", b"filter_addr", "filter_status", b"filter_status"]) -> None: ...

global___AddrReceivesRequest = AddrReceivesRequest

@typing_extensions.final
class AddrReceivesResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    EVENTS_FIELD_NUMBER: builtins.int
    @property
    def events(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AddrEvent]:
        """The events that match the filter criteria."""
    def __init__(
        self,
        *,
        events: collections.abc.Iterable[global___AddrEvent] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["events", b"events"]) -> None: ...

global___AddrReceivesResponse = AddrReceivesResponse

@typing_extensions.final
class SendAssetRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TAP_ADDRS_FIELD_NUMBER: builtins.int
    FEE_RATE_FIELD_NUMBER: builtins.int
    @property
    def tap_addrs(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    fee_rate: builtins.int
    """The optional fee rate to use for the minting transaction, in sat/kw.
    TODO(roasbeef): maybe in future add details re type of ProofCourier or
    w/e
    """
    def __init__(
        self,
        *,
        tap_addrs: collections.abc.Iterable[builtins.str] | None = ...,
        fee_rate: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["fee_rate", b"fee_rate", "tap_addrs", b"tap_addrs"]) -> None: ...

global___SendAssetRequest = SendAssetRequest

@typing_extensions.final
class PrevInputAsset(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ANCHOR_POINT_FIELD_NUMBER: builtins.int
    ASSET_ID_FIELD_NUMBER: builtins.int
    SCRIPT_KEY_FIELD_NUMBER: builtins.int
    AMOUNT_FIELD_NUMBER: builtins.int
    anchor_point: builtins.str
    asset_id: builtins.bytes
    script_key: builtins.bytes
    amount: builtins.int
    def __init__(
        self,
        *,
        anchor_point: builtins.str = ...,
        asset_id: builtins.bytes = ...,
        script_key: builtins.bytes = ...,
        amount: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["amount", b"amount", "anchor_point", b"anchor_point", "asset_id", b"asset_id", "script_key", b"script_key"]) -> None: ...

global___PrevInputAsset = PrevInputAsset

@typing_extensions.final
class SendAssetResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TRANSFER_FIELD_NUMBER: builtins.int
    @property
    def transfer(self) -> global___AssetTransfer: ...
    def __init__(
        self,
        *,
        transfer: global___AssetTransfer | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["transfer", b"transfer"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["transfer", b"transfer"]) -> None: ...

global___SendAssetResponse = SendAssetResponse

@typing_extensions.final
class GetInfoRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___GetInfoRequest = GetInfoRequest

@typing_extensions.final
class GetInfoResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VERSION_FIELD_NUMBER: builtins.int
    LND_VERSION_FIELD_NUMBER: builtins.int
    NETWORK_FIELD_NUMBER: builtins.int
    LND_IDENTITY_PUBKEY_FIELD_NUMBER: builtins.int
    NODE_ALIAS_FIELD_NUMBER: builtins.int
    BLOCK_HEIGHT_FIELD_NUMBER: builtins.int
    BLOCK_HASH_FIELD_NUMBER: builtins.int
    SYNC_TO_CHAIN_FIELD_NUMBER: builtins.int
    version: builtins.str
    lnd_version: builtins.str
    network: builtins.str
    lnd_identity_pubkey: builtins.str
    node_alias: builtins.str
    block_height: builtins.int
    block_hash: builtins.str
    sync_to_chain: builtins.bool
    def __init__(
        self,
        *,
        version: builtins.str = ...,
        lnd_version: builtins.str = ...,
        network: builtins.str = ...,
        lnd_identity_pubkey: builtins.str = ...,
        node_alias: builtins.str = ...,
        block_height: builtins.int = ...,
        block_hash: builtins.str = ...,
        sync_to_chain: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["block_hash", b"block_hash", "block_height", b"block_height", "lnd_identity_pubkey", b"lnd_identity_pubkey", "lnd_version", b"lnd_version", "network", b"network", "node_alias", b"node_alias", "sync_to_chain", b"sync_to_chain", "version", b"version"]) -> None: ...

global___GetInfoResponse = GetInfoResponse

@typing_extensions.final
class SubscribeSendAssetEventNtfnsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___SubscribeSendAssetEventNtfnsRequest = SubscribeSendAssetEventNtfnsRequest

@typing_extensions.final
class SendAssetEvent(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    EXECUTE_SEND_STATE_EVENT_FIELD_NUMBER: builtins.int
    PROOF_TRANSFER_BACKOFF_WAIT_EVENT_FIELD_NUMBER: builtins.int
    @property
    def execute_send_state_event(self) -> global___ExecuteSendStateEvent:
        """An event which indicates that a send state is about to be executed."""
    @property
    def proof_transfer_backoff_wait_event(self) -> global___ProofTransferBackoffWaitEvent:
        """An event which indicates that the proof transfer backoff wait period
        will start imminently.
        """
    def __init__(
        self,
        *,
        execute_send_state_event: global___ExecuteSendStateEvent | None = ...,
        proof_transfer_backoff_wait_event: global___ProofTransferBackoffWaitEvent | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["event", b"event", "execute_send_state_event", b"execute_send_state_event", "proof_transfer_backoff_wait_event", b"proof_transfer_backoff_wait_event"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["event", b"event", "execute_send_state_event", b"execute_send_state_event", "proof_transfer_backoff_wait_event", b"proof_transfer_backoff_wait_event"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["event", b"event"]) -> typing_extensions.Literal["execute_send_state_event", "proof_transfer_backoff_wait_event"] | None: ...

global___SendAssetEvent = SendAssetEvent

@typing_extensions.final
class ExecuteSendStateEvent(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TIMESTAMP_FIELD_NUMBER: builtins.int
    SEND_STATE_FIELD_NUMBER: builtins.int
    timestamp: builtins.int
    """Execute timestamp (microseconds)."""
    send_state: builtins.str
    """The send state that is about to be executed."""
    def __init__(
        self,
        *,
        timestamp: builtins.int = ...,
        send_state: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["send_state", b"send_state", "timestamp", b"timestamp"]) -> None: ...

global___ExecuteSendStateEvent = ExecuteSendStateEvent

@typing_extensions.final
class ProofTransferBackoffWaitEvent(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TIMESTAMP_FIELD_NUMBER: builtins.int
    BACKOFF_FIELD_NUMBER: builtins.int
    TRIES_COUNTER_FIELD_NUMBER: builtins.int
    TRANSFER_TYPE_FIELD_NUMBER: builtins.int
    timestamp: builtins.int
    """Transfer attempt timestamp (microseconds)."""
    backoff: builtins.int
    """Backoff is the active backoff wait duration."""
    tries_counter: builtins.int
    """Tries counter is the number of tries we've made so far during the
    course of the current backoff procedure to deliver the proof to the
    receiver.
    """
    transfer_type: global___ProofTransferType.ValueType
    """The type of proof transfer attempt."""
    def __init__(
        self,
        *,
        timestamp: builtins.int = ...,
        backoff: builtins.int = ...,
        tries_counter: builtins.int = ...,
        transfer_type: global___ProofTransferType.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["backoff", b"backoff", "timestamp", b"timestamp", "transfer_type", b"transfer_type", "tries_counter", b"tries_counter"]) -> None: ...

global___ProofTransferBackoffWaitEvent = ProofTransferBackoffWaitEvent

@typing_extensions.final
class SubscribeReceiveAssetEventNtfnsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___SubscribeReceiveAssetEventNtfnsRequest = SubscribeReceiveAssetEventNtfnsRequest

@typing_extensions.final
class ReceiveAssetEvent(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PROOF_TRANSFER_BACKOFF_WAIT_EVENT_FIELD_NUMBER: builtins.int
    @property
    def proof_transfer_backoff_wait_event(self) -> global___ProofTransferBackoffWaitEvent:
        """An event which indicates that the proof transfer backoff wait period
        will start imminently.
        """
    def __init__(
        self,
        *,
        proof_transfer_backoff_wait_event: global___ProofTransferBackoffWaitEvent | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["event", b"event", "proof_transfer_backoff_wait_event", b"proof_transfer_backoff_wait_event"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["event", b"event", "proof_transfer_backoff_wait_event", b"proof_transfer_backoff_wait_event"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["event", b"event"]) -> typing_extensions.Literal["proof_transfer_backoff_wait_event"] | None: ...

global___ReceiveAssetEvent = ReceiveAssetEvent

@typing_extensions.final
class FetchAssetMetaRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ASSET_ID_FIELD_NUMBER: builtins.int
    META_HASH_FIELD_NUMBER: builtins.int
    ASSET_ID_STR_FIELD_NUMBER: builtins.int
    META_HASH_STR_FIELD_NUMBER: builtins.int
    asset_id: builtins.bytes
    """The asset ID of the asset to fetch the meta for."""
    meta_hash: builtins.bytes
    """The 32-byte meta hash of the asset meta."""
    asset_id_str: builtins.str
    """The hex encoded asset ID of the asset to fetch the meta for."""
    meta_hash_str: builtins.str
    """The hex encoded meta hash of the asset meta."""
    def __init__(
        self,
        *,
        asset_id: builtins.bytes = ...,
        meta_hash: builtins.bytes = ...,
        asset_id_str: builtins.str = ...,
        meta_hash_str: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["asset", b"asset", "asset_id", b"asset_id", "asset_id_str", b"asset_id_str", "meta_hash", b"meta_hash", "meta_hash_str", b"meta_hash_str"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["asset", b"asset", "asset_id", b"asset_id", "asset_id_str", b"asset_id_str", "meta_hash", b"meta_hash", "meta_hash_str", b"meta_hash_str"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["asset", b"asset"]) -> typing_extensions.Literal["asset_id", "meta_hash", "asset_id_str", "meta_hash_str"] | None: ...

global___FetchAssetMetaRequest = FetchAssetMetaRequest

@typing_extensions.final
class BurnAssetRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ASSET_ID_FIELD_NUMBER: builtins.int
    ASSET_ID_STR_FIELD_NUMBER: builtins.int
    AMOUNT_TO_BURN_FIELD_NUMBER: builtins.int
    CONFIRMATION_TEXT_FIELD_NUMBER: builtins.int
    asset_id: builtins.bytes
    """The asset ID of the asset to burn units of."""
    asset_id_str: builtins.str
    """The hex encoded asset ID of the asset to burn units of."""
    amount_to_burn: builtins.int
    confirmation_text: builtins.str
    """A safety check to ensure the user is aware of the destructive nature of
    the burn. This needs to be set to the value "assets will be destroyed"
    for the burn to succeed.
    """
    def __init__(
        self,
        *,
        asset_id: builtins.bytes = ...,
        asset_id_str: builtins.str = ...,
        amount_to_burn: builtins.int = ...,
        confirmation_text: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["asset", b"asset", "asset_id", b"asset_id", "asset_id_str", b"asset_id_str"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["amount_to_burn", b"amount_to_burn", "asset", b"asset", "asset_id", b"asset_id", "asset_id_str", b"asset_id_str", "confirmation_text", b"confirmation_text"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["asset", b"asset"]) -> typing_extensions.Literal["asset_id", "asset_id_str"] | None: ...

global___BurnAssetRequest = BurnAssetRequest

@typing_extensions.final
class BurnAssetResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BURN_TRANSFER_FIELD_NUMBER: builtins.int
    BURN_PROOF_FIELD_NUMBER: builtins.int
    @property
    def burn_transfer(self) -> global___AssetTransfer:
        """The asset transfer that contains the asset burn as an output."""
    @property
    def burn_proof(self) -> global___DecodedProof:
        """The burn transition proof for the asset burn output."""
    def __init__(
        self,
        *,
        burn_transfer: global___AssetTransfer | None = ...,
        burn_proof: global___DecodedProof | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["burn_proof", b"burn_proof", "burn_transfer", b"burn_transfer"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["burn_proof", b"burn_proof", "burn_transfer", b"burn_transfer"]) -> None: ...

global___BurnAssetResponse = BurnAssetResponse
